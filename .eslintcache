[{"/Users/yechengjun/qiyu/my-react/src/index.js":"1","/Users/yechengjun/qiyu/my-react/src/App.js":"2","/Users/yechengjun/qiyu/my-react/src/reportWebVitals.js":"3","/Users/yechengjun/qiyu/my-react/src/routes.js":"4","/Users/yechengjun/qiyu/my-react/src/routerGuard.js":"5","/Users/yechengjun/qiyu/my-react/src/components/GlobalStyles.js":"6","/Users/yechengjun/qiyu/my-react/src/theme/index.js":"7","/Users/yechengjun/qiyu/my-react/src/views/NotFoundView.js":"8","/Users/yechengjun/qiyu/my-react/src/views/LoginView.js":"9","/Users/yechengjun/qiyu/my-react/src/views/recorder/RecorderView.js":"10","/Users/yechengjun/qiyu/my-react/src/views/ArticleEditView.js":"11","/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/EssayRecommendationView.js":"12","/Users/yechengjun/qiyu/my-react/src/views/trainingScheme/TrainingSchemeView.js":"13","/Users/yechengjun/qiyu/my-react/src/views/bulletin/BulletinManagementView.js":"14","/Users/yechengjun/qiyu/my-react/src/views/bulletin/BulletinListView.js":"15","/Users/yechengjun/qiyu/my-react/src/views/seminar/SeminarView.js":"16","/Users/yechengjun/qiyu/my-react/src/views/userManagemet/UserManagementView.js":"17","/Users/yechengjun/qiyu/my-react/src/views/ArticleView.js":"18","/Users/yechengjun/qiyu/my-react/src/theme/shadows.js":"19","/Users/yechengjun/qiyu/my-react/src/theme/typography.js":"20","/Users/yechengjun/qiyu/my-react/src/views/userManagemet/UserManage.js":"21","/Users/yechengjun/qiyu/my-react/src/layouts/MainLayout/index.js":"22","/Users/yechengjun/qiyu/my-react/src/layouts/DashoardLayout/index.js":"23","/Users/yechengjun/qiyu/my-react/src/settings.js":"24","/Users/yechengjun/qiyu/my-react/src/components/Page.js":"25","/Users/yechengjun/qiyu/my-react/src/views/bulletin/BulletinCard.js":"26","/Users/yechengjun/qiyu/my-react/src/views/seminar/SeminarManage.js":"27","/Users/yechengjun/qiyu/my-react/src/views/trainingScheme/TrainingScheme.js":"28","/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/EssayRecommendation.js":"29","/Users/yechengjun/qiyu/my-react/src/views/userManagemet/UserManageForm.js":"30","/Users/yechengjun/qiyu/my-react/src/layouts/MainLayout/TopBar.js":"31","/Users/yechengjun/qiyu/my-react/src/layouts/DashoardLayout/TopBar.js":"32","/Users/yechengjun/qiyu/my-react/src/views/recorder/RecorderManage.js":"33","/Users/yechengjun/qiyu/my-react/src/views/seminar/AddLinkForm.js":"34","/Users/yechengjun/qiyu/my-react/src/components/NewArticleForm.js":"35","/Users/yechengjun/qiyu/my-react/src/components/NewClassForm.js":"36","/Users/yechengjun/qiyu/my-react/src/components/CatalogCard.js":"37","/Users/yechengjun/qiyu/my-react/src/layouts/DashoardLayout/NavBar/index.js":"38","/Users/yechengjun/qiyu/my-react/src/views/recorder/UpLoadForm.js":"39","/Users/yechengjun/qiyu/my-react/src/views/recorder/RecorderManageForm.js":"40","/Users/yechengjun/qiyu/my-react/src/layouts/DashoardLayout/NavBar/NavItem.js":"41","/Users/yechengjun/qiyu/my-react/src/views/seminar/SeminarManageForm.js":"42","/Users/yechengjun/qiyu/my-react/src/service/userService.js":"43","/Users/yechengjun/qiyu/my-react/src/layouts/Context.js":"44","/Users/yechengjun/qiyu/my-react/src/base/index.js":"45","/Users/yechengjun/qiyu/my-react/src/views/updateUserInfo/UpdateUserInfoView.js":"46","/Users/yechengjun/qiyu/my-react/src/views/updateUserInfo/UpdateUserInfoForm.js":"47","/Users/yechengjun/qiyu/my-react/src/views/ResetPasswordView.js":"48","/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/essays/index.js":"49","/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/classes/index.js":"50","/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/classes/EssayClasses.js":"51","/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/essays/Essays.js":"52","/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/classes/NewClassForm.js":"53","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/index.js":"54","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/detail/index.js":"55","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/edit/index.js":"56","/Users/yechengjun/qiyu/my-react/src/views/device/DeviceView.js":"57","/Users/yechengjun/qiyu/my-react/src/views/device/DeviceManagement.js":"58","/Users/yechengjun/qiyu/my-react/src/views/device/components/DeviceTable.js":"59","/Users/yechengjun/qiyu/my-react/src/views/device/components/ApplyDeviceForm.js":"60","/Users/yechengjun/qiyu/my-react/src/views/device/DeviceNormal.js":"61","/Users/yechengjun/qiyu/my-react/src/views/device/components/EditDevice.js":"62","/Users/yechengjun/qiyu/my-react/src/views/device/components/DeviceApplyHistory.js":"63","/Users/yechengjun/qiyu/my-react/src/views/device/components/HistoryTable.js":"64","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/StudyPlanManage.js":"65","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/EditStudyPlan.js":"66","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/WorkTable.js":"67","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/EditWork.js":"68","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/EditStage.js":"69","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/StageButton.js":"70","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/planAllocation/index.js":"71","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/AssignUser.js":"72","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/Process.js":"73","/Users/yechengjun/qiyu/my-react/src/components/AlertBox/index.js":"74","/Users/yechengjun/qiyu/my-react/src/components/AlertBox/AlertBox.js":"75","/Users/yechengjun/qiyu/my-react/src/components/ConfirmModal/index.js":"76","/Users/yechengjun/qiyu/my-react/src/components/ConfirmModal/ConfirmModal.js":"77","/Users/yechengjun/qiyu/my-react/src/components/Loading/index.js":"78","/Users/yechengjun/qiyu/my-react/src/components/NoData/index.js":"79","/Users/yechengjun/qiyu/my-react/src/views/bulletin/BulletinManageView.js":"80","/Users/yechengjun/qiyu/my-react/src/views/bulletin/BulletinManage.js":"81","/Users/yechengjun/qiyu/my-react/src/views/bulletin/BulletinManageForm.js":"82"},{"size":553,"mtime":1619795778650,"results":"83","hashOfConfig":"84"},{"size":649,"mtime":1620185051502,"results":"85","hashOfConfig":"84"},{"size":362,"mtime":1619795778654,"results":"86","hashOfConfig":"84"},{"size":3514,"mtime":1620979688637,"results":"87","hashOfConfig":"84"},{"size":651,"mtime":1620283410616,"results":"88","hashOfConfig":"84"},{"size":852,"mtime":1619795778648,"results":"89","hashOfConfig":"84"},{"size":560,"mtime":1619795778656,"results":"90","hashOfConfig":"84"},{"size":1547,"mtime":1619795778658,"results":"91","hashOfConfig":"84"},{"size":4341,"mtime":1621221755734,"results":"92","hashOfConfig":"84"},{"size":679,"mtime":1619795778662,"results":"93","hashOfConfig":"84"},{"size":5606,"mtime":1620913391694,"results":"94","hashOfConfig":"84"},{"size":721,"mtime":1619795778661,"results":"95","hashOfConfig":"84"},{"size":691,"mtime":1619795778665,"results":"96","hashOfConfig":"84"},{"size":4472,"mtime":1620979266986,"results":"97","hashOfConfig":"84"},{"size":2098,"mtime":1621222302599,"results":"98","hashOfConfig":"84"},{"size":653,"mtime":1620979323679,"results":"99","hashOfConfig":"84"},{"size":679,"mtime":1619795778666,"results":"100","hashOfConfig":"84"},{"size":1305,"mtime":1620097352673,"results":"101","hashOfConfig":"84"},{"size":1618,"mtime":1619795778656,"results":"102","hashOfConfig":"84"},{"size":544,"mtime":1619795778657,"results":"103","hashOfConfig":"84"},{"size":4882,"mtime":1620909475557,"results":"104","hashOfConfig":"84"},{"size":1212,"mtime":1620062784098,"results":"105","hashOfConfig":"84"},{"size":2296,"mtime":1620912261707,"results":"106","hashOfConfig":"84"},{"size":6020,"mtime":1621236040184,"results":"107","hashOfConfig":"84"},{"size":340,"mtime":1619795778649,"results":"108","hashOfConfig":"84"},{"size":2035,"mtime":1621224583342,"results":"109","hashOfConfig":"84"},{"size":5625,"mtime":1620907575717,"results":"110","hashOfConfig":"84"},{"size":2575,"mtime":1620117942893,"results":"111","hashOfConfig":"84"},{"size":2581,"mtime":1620284073463,"results":"112","hashOfConfig":"84"},{"size":3402,"mtime":1620915493310,"results":"113","hashOfConfig":"84"},{"size":856,"mtime":1619795778652,"results":"114","hashOfConfig":"84"},{"size":5250,"mtime":1621224694241,"results":"115","hashOfConfig":"84"},{"size":10170,"mtime":1620914720000,"results":"116","hashOfConfig":"84"},{"size":1586,"mtime":1620892330985,"results":"117","hashOfConfig":"84"},{"size":3176,"mtime":1620915494132,"results":"118","hashOfConfig":"84"},{"size":1969,"mtime":1620915494909,"results":"119","hashOfConfig":"84"},{"size":2977,"mtime":1620891390538,"results":"120","hashOfConfig":"84"},{"size":4327,"mtime":1620979756786,"results":"121","hashOfConfig":"84"},{"size":2775,"mtime":1620892299886,"results":"122","hashOfConfig":"84"},{"size":3903,"mtime":1620915496133,"results":"123","hashOfConfig":"84"},{"size":2145,"mtime":1620315739229,"results":"124","hashOfConfig":"84"},{"size":3124,"mtime":1620915458272,"results":"125","hashOfConfig":"84"},{"size":1036,"mtime":1620897536081,"results":"126","hashOfConfig":"84"},{"size":81,"mtime":1620074584499,"results":"127","hashOfConfig":"84"},{"size":3419,"mtime":1621224547870,"results":"128","hashOfConfig":"84"},{"size":1919,"mtime":1621221487634,"results":"129","hashOfConfig":"84"},{"size":5934,"mtime":1621221988884,"results":"130","hashOfConfig":"84"},{"size":4417,"mtime":1620915470780,"results":"131","hashOfConfig":"84"},{"size":615,"mtime":1620319785438,"results":"132","hashOfConfig":"84"},{"size":635,"mtime":1620318170024,"results":"133","hashOfConfig":"84"},{"size":4740,"mtime":1620907575718,"results":"134","hashOfConfig":"84"},{"size":4585,"mtime":1620907575718,"results":"135","hashOfConfig":"84"},{"size":1969,"mtime":1620915492445,"results":"136","hashOfConfig":"84"},{"size":837,"mtime":1620646158745,"results":"137","hashOfConfig":"84"},{"size":6718,"mtime":1620911757980,"results":"138","hashOfConfig":"84"},{"size":649,"mtime":1620369998864,"results":"139","hashOfConfig":"84"},{"size":1438,"mtime":1620443333430,"results":"140","hashOfConfig":"84"},{"size":177,"mtime":1620388513742,"results":"141","hashOfConfig":"84"},{"size":6304,"mtime":1621218579768,"results":"142","hashOfConfig":"84"},{"size":2095,"mtime":1621218350474,"results":"143","hashOfConfig":"84"},{"size":2608,"mtime":1621218506568,"results":"144","hashOfConfig":"84"},{"size":4259,"mtime":1620915491148,"results":"145","hashOfConfig":"84"},{"size":3984,"mtime":1620892178284,"results":"146","hashOfConfig":"84"},{"size":2700,"mtime":1620892255964,"results":"147","hashOfConfig":"84"},{"size":6006,"mtime":1620907575716,"results":"148","hashOfConfig":"84"},{"size":2997,"mtime":1620913503013,"results":"149","hashOfConfig":"84"},{"size":5670,"mtime":1620892432967,"results":"150","hashOfConfig":"84"},{"size":2218,"mtime":1620898393407,"results":"151","hashOfConfig":"84"},{"size":2404,"mtime":1620892364995,"results":"152","hashOfConfig":"84"},{"size":1443,"mtime":1620638962634,"results":"153","hashOfConfig":"84"},{"size":9053,"mtime":1620907575716,"results":"154","hashOfConfig":"84"},{"size":5527,"mtime":1620808379446,"results":"155","hashOfConfig":"84"},{"size":7775,"mtime":1620870434724,"results":"156","hashOfConfig":"84"},{"size":677,"mtime":1620819646385,"results":"157","hashOfConfig":"84"},{"size":924,"mtime":1620899960389,"results":"158","hashOfConfig":"84"},{"size":698,"mtime":1620877120580,"results":"159","hashOfConfig":"84"},{"size":1330,"mtime":1620891128881,"results":"160","hashOfConfig":"84"},{"size":171,"mtime":1620901843914,"results":"161","hashOfConfig":"84"},{"size":265,"mtime":1620902394464,"results":"162","hashOfConfig":"84"},{"size":670,"mtime":1620979344396,"results":"163","hashOfConfig":"84"},{"size":4435,"mtime":1620982724114,"results":"164","hashOfConfig":"84"},{"size":2564,"mtime":1621216879775,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"1w7v59u",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"168"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"168"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"168"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"168"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"168"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"168"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"168"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"168"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"168"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"168"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"168"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"168"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"168"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"168"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"168"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"168"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"168"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"168"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"168"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"168"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"168"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"168"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"168"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"168"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"168"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"168"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yechengjun/qiyu/my-react/src/index.js",[],["357","358"],"/Users/yechengjun/qiyu/my-react/src/App.js",[],"/Users/yechengjun/qiyu/my-react/src/reportWebVitals.js",[],"/Users/yechengjun/qiyu/my-react/src/routes.js",["359"],"import {Redirect} from 'react-router-dom';\nimport MainLayout from './layouts/MainLayout';\nimport DashboardLayout from './layouts/DashoardLayout'\nimport LoginView from './views/LoginView';\nimport ResetPasswordView from \"./views/ResetPasswordView\";\nimport UpdateUserInfoView from \"./views/updateUserInfo/UpdateUserInfoView\";\nimport NotFoundView from './views/NotFoundView';\nimport SeminarView from './views/seminar/SeminarView';\nimport RecorderView from './views/recorder/RecorderView';\nimport UserManagementView from './views/userManagemet/UserManagementView';\nimport EssayRecommendationView from \"./views/essayRecommendation/EssayRecommendationView\";\nimport EssaysView from \"./views/essayRecommendation/essays\";\nimport ClassesView from \"./views/essayRecommendation/classes\";\nimport ArticleView from './views/ArticleView';\nimport ArticleEditView from './views/ArticleEditView'\nimport TrainingSchemeView from './views/trainingScheme/TrainingSchemeView';\nimport StudyPlanView from \"./views/studyPlan\";\nimport PlanAllocationView from \"./views/studyPlan/planAllocation\";\n// import StudyPlanEditView from \"./views/studyPlan/edit\";\nimport StudyPlanDetailView from \"./views/studyPlan/detail\";\nimport BulletinManageView from \"./views/bulletin/BulletinManageView\";\nimport BulletinManagementView from \"./views/bulletin/BulletinManagementView\";\nimport BulletinListView from './views/bulletin/BulletinListView';\nimport DeviceView from './views/device/DeviceView';\n       \nconst routes = [\n  {\n    path: \"/main\",\n    component: MainLayout,\n    routes: [\n      { path: \"/main/login\", component: LoginView },\n      { path: \"/main/reset\", component: ResetPasswordView },\n    ], \n  },\n  {\n    path: \"/app\",\n    component: DashboardLayout,\n    auth: true,\n    routes: [\n      { path: \"/app/updateUserInfo/:id\", component: UpdateUserInfoView }, //更新用户信息\n      { path: \"/app/article/:id\", component: ArticleView }, //查看文章\n      { path: \"/app/articleEdit/:id\", component: ArticleEditView }, //编辑文章\n      { path: \"/app/seminar\", component: SeminarView }, //演讲安排\n      { path: \"/app/recorder\", component: RecorderView }, //辅读安排\n      { path: \"/app/userManagement\", component: UserManagementView }, //用户管理\n      { path: \"/app/essayRecommendation/essays\", component: EssaysView }, //推荐论文列表\n      {\n        path: \"/app/essayRecommendation/classes\",\n        component: ClassesView,\n      }, //推荐论文分类\n      { path: \"/app/essayRecommendation\", component: EssayRecommendationView }, //推荐论文\n      {\n        path: \"/app/studyPlan/planAllocation/:planId\",\n        component: PlanAllocationView,\n      }, //任务分配\n      { path: \"/app/studyPlan/detail/:id\", component: StudyPlanDetailView }, //培养计划详情\n      { path: \"/app/studyPlan\", component: StudyPlanView }, //培养计划列表\n      { path: \"/app/trainingScheme\", component: TrainingSchemeView }, //培养方案\n      { path: \"/app/bulletinManage\", component: BulletinManageView }, // 通告管理\n      { path: \"/app/bulletinManagement\", component: BulletinManagementView }, // 通告管理\n      { path: \"/app/bulletinList\", component: BulletinListView }, //通知列表\n      { path: \"/app/device\", component: DeviceView }, //IT资源管理\n      { path: \"*\", component: NotFoundView },\n    ],\n  },\n  {\n    path: \"/\",\n    component: MainLayout,\n    routes: [\n      { path: \"/404\", component: NotFoundView },\n      { path: \"/*\", component: LoginView },\n    ],\n  },\n];\n\nexport default routes;","/Users/yechengjun/qiyu/my-react/src/routerGuard.js",["360"],"// routerGuard.jsx\nimport React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport cookie from 'react-cookies';\n\nconst checkLoginStatus = () => {\n    if(cookie.load(\"loggedIn\")==null) return false;\n    return true;\n}\n\nexport function RouteWithSubRoutes(route) {\n    if(route.auth && checkLoginStatus()==false)\n    {\n        console.log(\"请先登录\")\n        return <Redirect to=\"/main/login\"/>\n    }\n    return (\n      <Route\n        path={route.path}\n        render={props => (\n          // pass the sub-routes down to keep nesting\n          <route.component  {...props}  routes={route.routes} />\n        )}\n      />\n    );\n  }\n","/Users/yechengjun/qiyu/my-react/src/components/GlobalStyles.js",[],"/Users/yechengjun/qiyu/my-react/src/theme/index.js",[],"/Users/yechengjun/qiyu/my-react/src/views/NotFoundView.js",[],"/Users/yechengjun/qiyu/my-react/src/views/LoginView.js",["361"],"/Users/yechengjun/qiyu/my-react/src/views/recorder/RecorderView.js",[],"/Users/yechengjun/qiyu/my-react/src/views/ArticleEditView.js",["362"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Button, Typography, TextField } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport alertBox from \"src/components/AlertBox\";\n\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport {\n  EDIT_ARTICLE_URL,\n  GET_ARTICLE_URL,\n  ADD_ARTICLE_URL,\n  GET_ALL_CLASS_URL,\n} from \"src/settings\";\nimport { UserContext } from \"src/layouts/Context\";\nimport { postFetch } from \"src/base\"; \n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  article: {\n    margin: \"4%\",\n    padding: \"4%\",\n    boxShadow: \"2px 2px 2px 1px rgba(0, 0, 0, 0.2)\",\n    backgroundColor: \"white\",\n  },\n  flexHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  header: {\n    marginBottom: \"2%\",\n    \"& button\": {\n      marginLeft: 5,\n    },\n    \"& h4\": {\n      margin: 5,\n      lineHeight: 2,\n      fontWeight: 600,\n      flex: 1,\n    },\n  },\n  footer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 12,\n    \"& button\": {\n      margin: 20,\n    },\n  },\n}));\n\nexport default function ArticleEditView(props) {\n  const { id } = useParams();\n  const history = useHistory();\n  const { userInfo } = useContext(UserContext);\n  const hasPermission = userInfo.roleId === 10 || userInfo.roleId === 40;\n  const [essayClasses, setEssayClasses] = useState([]);\n  const [essayClass, setEssayClass] = useState('');\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const classes = useStyles();\n  const handleEditorChange = (content, editor) => {\n    setContent(content);\n  };\n  const getAllEssayClasses = () => {\n    fetch(GET_ALL_CLASS_URL, {})\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => {\n        setEssayClasses(response?.data || []);\n      });\n  };\n  const handleSubmit = () => {\n    if (title === \"\") {\n      alertBox({ text: \"文章标题不可为空\", severity: \"error\" });\n      return;\n    }\n    if (essayClass === \"\") {\n      alertBox({ text: \"请选择文章类型\", severity: \"error\" });\n      return;\n    }\n    if (content === \"\") {\n      alertBox({ text: \"文章内容不可为空\", severity: \"error\" });\n      return;\n    }\n    postFetch({\n      url: id === \"0\" ? ADD_ARTICLE_URL : EDIT_ARTICLE_URL,\n      values: {\n        id,\n        title,\n        content,\n        categoryId: essayClass,\n      },\n      successCallback: () => {\n        alertBox({ text: '添加成功', severity: \"success\" });\n        history.replace(\"/app/essayRecommendation/essays\");\n      }\n    });\n  };\n  const getArticle = () => {\n    fetch(`${GET_ARTICLE_URL}${id}`, {})\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => {\n        setTitle(response?.data?.title);\n        setContent(response?.data?.content);\n        setEssayClass(response?.data?.categoryId);\n      });\n  };\n  useEffect(() => {\n    getAllEssayClasses();\n    if (parseInt(id) > 0) getArticle();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!hasPermission) {\n    return (\n      <div className={classes.article}>\n        <Box className={clsx(classes.header, classes.flexHeader)}>\n          <Typography color=\"textPrimary\" variant=\"h4\">\n            {title}\n          </Typography>\n          <Button color=\"primary\" variant=\"outlined\" onClick={history.goBack}>\n            返回\n          </Button>\n        </Box>\n        <div dangerouslySetInnerHTML={{ __html: content }} />\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Box className={classes.header}>\n        <TextField\n          label=\"论文名称\"\n          fullWidth\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n        />\n        <TextField\n          select\n          fullWidth\n          label=\"论文分类\"\n          name=\"roleId\"\n          margin=\"normal\"\n          onChange={(event) => setEssayClass(event.target.value)}\n          value={essayClass}\n        >\n          {essayClasses.map((option) => (\n            <option key={option.id} value={option.id}>\n              {option.name}\n            </option>\n          ))}\n        </TextField>\n      </Box>\n      <form>\n        <Editor\n          apiKey=\"5vf6jo8wb1i8207zmbiyorw8e5z1pu5fu1o633p5lz4990yt\"\n          value={content}\n          init={{\n            height: 500,\n            menubar: false,\n            plugins: [\n              \"advlist autolink lists link image charmap print preview anchor\",\n              \"searchreplace visualblocks code fullscreen\",\n              \"insertdatetime media table paste code help wordcount\",\n            ],\n            toolbar:\n              \"undo redo|styleselect | bold italic backcolor | \\\n             alignleft aligncenter alignright alignjustify | \\\n             link|image |table|bullist numlist outdent indent | removeformat | help\",\n          }}\n          onEditorChange={handleEditorChange}\n        />\n      </form>\n      <Box className={classes.footer}>\n        <Button\n          color=\"primary\"\n          size=\"large\"\n          variant=\"outlined\"\n          onClick={history.goBack}\n        >\n          返回\n        </Button>\n        <Button\n          color=\"primary\"\n          size=\"large\"\n          variant=\"outlined\"\n          onClick={handleSubmit}\n        >\n          保存\n        </Button>\n      </Box>\n    </div>\n  );\n}\n","/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/EssayRecommendationView.js",[],"/Users/yechengjun/qiyu/my-react/src/views/trainingScheme/TrainingSchemeView.js",[],"/Users/yechengjun/qiyu/my-react/src/views/bulletin/BulletinManagementView.js",["363"],"import React, { useRef, useContext } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Box,\n  Button,\n  Container,\n  TextField,\n  makeStyles,\n} from \"@material-ui/core\";\nimport alertBox from \"src/components/AlertBox\";\nimport Page from \"src/components/Page\";\nimport { MNG_ADD_BULLETIN_URL } from \"src/settings\";\nimport { Redirect } from \"react-router-dom\";\nimport { UserContext } from \"src/layouts/Context\";\nimport { postFetch } from \"src/base\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: \"100%\",\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n  },\n  image: {\n    marginTop: 50,\n    display: \"inline-block\",\n    maxWidth: \"100%\",\n    width: 560,\n  },\n}));\n\nconst BulletinManagementView = () => {\n  const classes = useStyles();\n  // const ref = useRef();\n  const { userInfo } = useContext(UserContext);\n  // const sendMessage = (msg) => {\n  //   //发送消息\n  //   ref.current.sendMessage(\"/app/server\", msg);\n  // };\n\n  return userInfo.roleId !== 10 && userInfo.roleId !== 60 ? (\n    <Redirect to=\"/404\" />\n  ) : (\n    <div>\n      {/* <SockJsClient\n        url={BASE_URL + \"/ws\"}\n        topics={[\"/topic/bulletin\"]}\n        onMessage={() => {}}\n        ref={ref}\n      /> */}\n      <Page className={classes.root} title=\"通告管理\">\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          height=\"100%\"\n          justifyContent=\"center\"\n        >\n          <Container maxWidth=\"md\">\n            <Formik\n              initialValues={{\n                title: \"\",\n                content: \"\",\n              }}\n              validationSchema={Yup.object().shape({\n                title: Yup.string().max(255).required(\"通知标题不能为空\"),\n                content: Yup.string().required(\"通知内容不能为空\"),\n              })}\n              onSubmit={(values) => {\n                postFetch({\n                  url: MNG_ADD_BULLETIN_URL,\n                  values,\n                  successCallback: () => {\n                    // sendMessage(\"xxx\");\n                    alertBox({ text: \"通知发送成功\", severity: \"success\" });\n                  },\n                });\n                // var url = ADD_BULLETIN_URL;\n                // fetch(url, {\n                //   method: \"POST\",\n                //   headers: new Headers({\n                //     token: cookie.load(\"userInfo\").token,\n                //     \"Content-Type\": \"application/json;charset=utf-8\",\n                //   }),\n                //   body: JSON.stringify(values),\n                // });\n                // sendMessage(\"xxx\");\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                //isSubmitting,\n                touched,\n                values,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <TextField\n                    error={Boolean(errors.title)}\n                    fullWidth\n                    helperText={errors.title}\n                    label=\"编辑通知标题\"\n                    margin=\"normal\"\n                    name=\"title\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                  />\n\n                  <TextField\n                    error={Boolean(errors.content)}\n                    fullWidth\n                    helperText={errors.content}\n                    label=\"编辑通知内容\"\n                    margin=\"normal\"\n                    name=\"content\"\n                    multiline\n                    rows={10}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                  />\n\n                  <Box my={2}>\n                    <Button\n                      color=\"primary\"\n                      //disabled={isSubmitting}\n                      fullWidth\n                      // size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      发布新通知\n                    </Button>\n                  </Box>\n                </form>\n              )}\n            </Formik>\n          </Container>\n        </Box>\n      </Page>\n    </div>\n  );\n};\n\nexport default BulletinManagementView;\n","/Users/yechengjun/qiyu/my-react/src/views/bulletin/BulletinListView.js",[],"/Users/yechengjun/qiyu/my-react/src/views/seminar/SeminarView.js",[],"/Users/yechengjun/qiyu/my-react/src/views/userManagemet/UserManagementView.js",[],"/Users/yechengjun/qiyu/my-react/src/views/ArticleView.js",["364","365"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport cookie from \"react-cookies\";\nimport { GET_ARTICLE_URL } from \"src/settings\";\nconst useStyles = makeStyles(() => ({\n  article: {\n    margin: \"4%\",\n    padding: \"4%\",\n    boxShadow: \"2px 2px 2px 1px rgba(0, 0, 0, 0.2)\",\n    backgroundColor: \"white\",\n  },\n  header: {\n    marginBottom: \"2%\",\n  },\n}));\nexport default function ArticleView(props) {\n  let { id } = useParams();\n  let [title, setTitle] = useState(\"\");\n  let [content, setContent] = useState(\"\");\n  const classes = useStyles();\n  const getArticle = () => {\n    fetch(`${GET_ARTICLE_URL}/${id}`, {})\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => {\n        console.log(response);\n        setTitle(response?.data?.title || '');\n        setContent(response?.data?.content || '');\n      });\n  };\n  useEffect(getArticle, []);\n  return (\n    <div className={classes.article}>\n      <Typography className={classes.header} color=\"textPrimary\" variant=\"h4\">\n        {title}\n      </Typography>\n      <div dangerouslySetInnerHTML={{ __html: content }} />\n    </div>\n  );\n}\n","/Users/yechengjun/qiyu/my-react/src/theme/shadows.js",["366"],"export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","/Users/yechengjun/qiyu/my-react/src/theme/typography.js",["367"],"export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","/Users/yechengjun/qiyu/my-react/src/views/userManagemet/UserManage.js",[],"/Users/yechengjun/qiyu/my-react/src/layouts/MainLayout/index.js",["368"],"import React from 'react';\nimport routes from 'src/routes'\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\nimport { RouteWithSubRoutes } from \"src/routerGuard\";\nimport{Switch} from 'react-router-dom'\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = ({ routes }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n          <Switch>\n          {routes.map((route, i) => (\n            <RouteWithSubRoutes key={i} {...route} />\n          ))}\n        </Switch>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","/Users/yechengjun/qiyu/my-react/src/layouts/DashoardLayout/index.js",["369"],"import React, { useEffect, useState } from 'react';\nimport { Switch, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\nimport { getUserInfo } from 'src/service/userService';\nimport { RouteWithSubRoutes } from \"src/routerGuard\";\n// import SockJsClient from 'react-stomp';\nimport { UserContext } from '../Context'\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = ({ routes }) => {\n  let history = useHistory();\n  const classes = useStyles();\n  const [user, setUser] = useState({ userId: 0 });\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n  useEffect(() => {\n    getUserInfo().then(res => {\n      if (res?.success) {\n        setUser(res?.data)\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  if (user.userId === 0) return null\n  return (\n    <UserContext.Provider value={{ userInfo: user }}>\n      <div className={classes.root}>\n        {/* <SockJsClient url={BASE_URL+'/ws'} topics={['/topic/bulletin']}\n              onMessage={()=>{window.alert(\" 您有一条新的通知！\");}}\n        /> */}\n        \n        <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n        <NavBar\n          onMobileClose={() => setMobileNavOpen(false)}\n          openMobile={isMobileNavOpen}\n        />\n        <div className={classes.wrapper}>\n          <div className={classes.contentContainer}>\n            <div className={classes.content}>\n            <Switch>\n            {routes.map((route, i) => (\n              <RouteWithSubRoutes key={i} {...route}/>\n            ))}\n          </Switch>\n            </div>\n          </div>\n        </div>\n      \n      </div>\n    </UserContext.Provider>\n  );\n};\n\nexport default DashboardLayout;\n","/Users/yechengjun/qiyu/my-react/src/settings.js",[],"/Users/yechengjun/qiyu/my-react/src/components/Page.js",[],"/Users/yechengjun/qiyu/my-react/src/views/bulletin/BulletinCard.js",["370"],"/Users/yechengjun/qiyu/my-react/src/views/seminar/SeminarManage.js",[],"/Users/yechengjun/qiyu/my-react/src/views/trainingScheme/TrainingScheme.js",["371","372","373"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Box, Button, makeStyles } from \"@material-ui/core\";\nimport { GET_ALL_CLASS_URL } from \"src/settings\";\nimport { UserContext } from \"src/layouts/Context\";\nimport CatalogCard from \"../../components/CatalogCard\";\nimport cookie from \"react-cookies\";\nimport NewClassForm from \"../../components/NewClassForm\";\nimport NewArticleForm from \"../../components/NewArticleForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    \"& button\": {\n      marginInline: 8,\n    },\n  },\n}));\nexport default function TrainingScheme() {\n  const classes = useStyles();\n  const [datas, setDatas] = useState([]);\n  const [open_class, setOpen_class] = useState(false);\n  const [open_article, setOpen_article] = useState(false);\n  const { userInfo } = useContext(UserContext);\n\n  const handleOpen_class = () => {\n    setOpen_class(true);\n  };\n\n  const handleClose_class = () => {\n    setOpen_class(false);\n    getEssayCatalog();\n  };\n  const handleOpen_article = () => {\n    setOpen_article(true);\n  };\n  const handleClose_article = () => {\n    setOpen_article(false);\n    getEssayCatalog();\n  };\n\n  const getEssayCatalog = () => {\n    fetch(GET_ALL_CLASS_URL + \"?tag=1\", {})\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => {\n        console.log(response);\n        setDatas(response?.data || []);\n      });\n  };\n  useEffect(getEssayCatalog, []);\n  return (\n    <div>\n      {(userInfo.roleId == 10 || userInfo.roleId == 50) && (\n        <Box className={classes.toolbar}>\n          <Button\n            color=\"primary\"\n            size=\"medium\"\n            variant=\"contained\"\n            onClick={handleOpen_class}\n          >\n            新建类别\n          </Button>\n          <Button\n            color=\"primary\"\n            size=\"medium\"\n            variant=\"contained\"\n            onClick={handleOpen_article}\n          >\n            新建文章\n          </Button>\n        </Box>\n      )}\n\n      {datas.map((item) => (\n        <CatalogCard\n          key={item.id}\n          data={item}\n          refresh={getEssayCatalog}\n          userRoleId={userInfo.roleId}\n          authType={4}\n        ></CatalogCard>\n      ))}\n      <NewClassForm\n        open={open_class}\n        onClose={handleClose_class}\n        tag={1}\n      ></NewClassForm>\n      <NewArticleForm\n        open={open_article}\n        onClose={handleClose_article}\n        classes={datas}\n      ></NewArticleForm>\n    </div>\n  );\n}\n","/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/EssayRecommendation.js",["374","375","376"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Box, Button, makeStyles } from \"@material-ui/core\";\nimport { GET_ALL_CLASS_URL } from \"src/settings\";\nimport { UserContext } from \"src/layouts/Context\";\nimport CatalogCard from \"../../components/CatalogCard\";\nimport cookie from \"react-cookies\";\nimport NewClassForm from \"../../components/NewClassForm\";\nimport NewArticleForm from \"../../components/NewArticleForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    \"& button\": {\n      marginInline: 8,\n    },\n  },\n}));\nexport default function EssayRecommendation() {\n  const classes = useStyles();\n  const [datas, setDatas] = useState([]);\n  const [open_class, setOpen_class] = useState(false);\n  const [open_article, setOpen_article] = useState(false);\n  const { userInfo } = useContext(UserContext);\n\n  const handleOpen_class = () => {\n    setOpen_class(true);\n  };\n\n  const handleClose_class = () => {\n    setOpen_class(false);\n    getEssayCatalog();\n  };\n  const handleOpen_article = () => {\n    setOpen_article(true);\n  };\n  const handleClose_article = () => {\n    setOpen_article(false);\n    getEssayCatalog();\n  };\n  const getEssayCatalog = () => {\n    fetch(GET_ALL_CLASS_URL + \"?tag=0\", {})\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => {\n        console.log(response);\n        setDatas(response?.data || []);\n      });\n  };\n  useEffect(getEssayCatalog, []);\n  return (\n    <div>\n      {(userInfo.roleId == 10 || userInfo.roleId == 40) && (\n        <Box className={classes.toolbar}>\n          <Button\n            color=\"primary\"\n            size=\"medium\"\n            variant=\"contained\"\n            onClick={handleOpen_class}\n          >\n            新建类别\n          </Button>\n          <Button\n            color=\"primary\"\n            size=\"medium\"\n            variant=\"contained\"\n            onClick={handleOpen_article}\n          >\n            新建文章\n          </Button>\n        </Box>\n      )}\n\n      {datas?.map((item) => (\n        <CatalogCard\n          key={item.id}\n          data={item}\n          refresh={getEssayCatalog}\n          userRoleId={userInfo.roleId}\n          authType={40}\n        ></CatalogCard>\n      ))}\n      <NewClassForm\n        open={open_class}\n        onClose={handleClose_class}\n        tag={0}\n      ></NewClassForm>\n      <NewArticleForm\n        open={open_article}\n        onClose={handleClose_article}\n        classes={datas}\n      ></NewArticleForm>\n    </div>\n  );\n}\n","/Users/yechengjun/qiyu/my-react/src/views/userManagemet/UserManageForm.js",[],"/Users/yechengjun/qiyu/my-react/src/layouts/MainLayout/TopBar.js",[],"/Users/yechengjun/qiyu/my-react/src/layouts/DashoardLayout/TopBar.js",["377"],"/Users/yechengjun/qiyu/my-react/src/views/recorder/RecorderManage.js",["378"],"import React, { useEffect, useState, useContext } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Loading from \"src/components/Loading\";\nimport NoData from \"src/components/NoData\";\nimport ReactDOM from \"react-dom\";\nimport { UserContext } from \"src/layouts/Context\";\nimport { getAllUser } from \"src/service/userService\";\nimport { deleteFetch } from \"src/base\";\nimport corfirmModal from \"src/components/ConfirmModal\";\nimport RecorderManageForm from \"./RecorderManageForm\";\nimport {\n  GET_ALL_RECORDER_URL,\n  DELETE_RECORDER_URL,\n} from \"src/settings\";\nimport UploadForm from \"./UpLoadForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actions: {\n    justifyContent: \"flex-end\",\n  },\n  td: {\n    maxWidth: \"100px\",\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"16px\",\n    \"& p\": {\n      lineHeight: 2,\n    },\n  },\n  todos: {\n    background: \"#3f51b554\",\n    padding: \"1rem\",\n    marginBottom: \"5px\",\n  },\n  Pagination: {\n    padding: theme.spacing(2),\n    \"& .MuiPagination-ul\": {\n      justifyContent: \"center\",\n    },\n  },\n}));\n\nconst RecorderManage = () => {\n  const classes = useStyles();\n  const [recorders, setRecorders] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const { userInfo } = useContext(UserContext);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [pageNo, setPageNo] = useState(0);\n  //向后台调取用户列表并更新界面\n  useEffect(() => {\n    getAllUser({ page: 1, limit: 1999 }).then((res) => {\n      setUsers(res.data || []);\n    });\n  }, []);\n\n  const getAllRecorder = () => {\n    fetch(`${GET_ALL_RECORDER_URL}?limit=10&offset=${(page - 1) * 10}`, {})\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => {\n        setRecorders(response.data || []);\n        response?.data?.map((recorder) => {\n          if (\n            !recorder.recorder1 &&\n            userInfo.userId === recorder?.recorder1Id\n          ) {\n            const element = document.createElement(\"div\");\n            element.id = \"id1_\" + recorder.id;\n            document.getElementById(\"todos\").appendChild(element);\n            ReactDOM.render(\n              <UploadForm\n                DocType={0}\n                Date={recorder.date}\n                RecorderId={recorder.id}\n                refresh={() => setRefresh(!refresh)}\n              />,\n              document.getElementById(\"id1_\" + recorder.id)\n            );\n          }\n          if (\n            !recorder.recorder2 &&\n            userInfo.userId === recorder?.recorder2Id\n          ) {\n            const element = document.createElement(\"div\");\n            element.id = \"id2_\" + recorder.id;\n            document.getElementById(\"todos\").appendChild(element);\n            ReactDOM.render(\n              <UploadForm\n                DocType={1}\n                Date={recorder.date}\n                RecorderId={recorder.id}\n                refresh={() => setRefresh(!refresh)}\n              />,\n              document.getElementById(\"id2_\" + recorder.id)\n            );\n          }\n          if (!recorder.summary && userInfo.userId === recorder.summarizerId) {\n            const element = document.createElement(\"div\");\n            element.id = \"id3_\" + recorder.id;\n            document.getElementById(\"todos\").appendChild(element);\n            ReactDOM.render(\n              <UploadForm\n                DocType={2}\n                Date={recorder.date}\n                RecorderId={recorder.id}\n              ></UploadForm>,\n              document.getElementById(\"id3_\" + recorder.id)\n            );\n          }\n          setPageNo(Math.ceil(response?.paging?.total / 10) || 0);\n          return null;\n        });\n      })\n      .finally(() => setLoading(false));\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    getAllRecorder();\n  };\n  const handleDeleteRecorder = (id) => {\n    const cor = corfirmModal({\n      title: \"确定要删除吗？\",\n      handleCorfirm: () => {\n        cor.close();\n        deleteFetch({\n          url: `${DELETE_RECORDER_URL}?id=${id}`,\n          values: { id },\n          successCallback: () => {\n            setRefresh((prev) => !prev);\n          },\n        });\n      },\n    });\n  };\n  /* 下载文件的公共方法，参数就传blob文件流*/\n  // const handleExport = (data, fileName) => {\n  //   // 动态创建iframe下载文件\n  //   if (!data) {\n  //     return;\n  //   }\n\n  //   let blob = new Blob([data], { type: \"application/octet-stream\" });\n  //   if (\"download\" in document.createElement(\"a\")) {\n  //     // 不是IE浏览器\n  //     let url = window.URL.createObjectURL(blob);\n  //     let link = document.createElement(\"a\");\n  //     link.style.display = \"none\";\n  //     link.href = url;\n  //     link.setAttribute(\"download\", fileName);\n  //     document.body.appendChild(link);\n  //     link.click();\n  //     document.body.removeChild(link); // 下载完成移除元素\n  //     window.URL.revokeObjectURL(url); // 释放掉blob对象\n  //   } else {\n  //     // IE 10+\n  //     window.navigator.msSaveBlob(blob, fileName);\n  //   }\n  // };\n\n  // const handleDownload = (URL, id, fileName) => {\n  //   fetch(URL + \"?id=\" + id, {\n  //     method: \"GET\",\n  //     headers: new Headers({\n  //       \"Content-Type\": \"application/json\",\n  //     }),\n  //   }).then((response) => {\n  //     response.blob().then((blob) => {\n  //       handleExport(blob, fileName);\n  //     });\n  //   });\n  // };\n  useEffect(getAllRecorder, [refresh, page]);\n  const hasPermission = userInfo.roleId === 10 || userInfo.roleId === 20;\n  return (\n    <div>\n      <div id=\"todos\" className={classes.todos}></div>\n\n      <Card className={classes.root}>\n        <Box className={classes.header}>\n          <Typography color=\"textPrimary\" size=\"small\">\n            辅读安排\n          </Typography>\n          {hasPermission && (\n            <Button\n              color=\"primary\"\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={handleOpen}\n            >\n              添加辅读安排\n            </Button>\n          )}\n        </Box>\n        <Divider />\n        {/* <PerfectScrollbar> */}\n        <Box minWidth={800}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">时间</TableCell>\n                <TableCell align=\"center\">辅读人1</TableCell>\n                <TableCell align=\"center\">辅读人2</TableCell>\n                <TableCell align=\"center\">记录员</TableCell>\n                {hasPermission && <TableCell align=\"center\">操作</TableCell>}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {recorders.map((recorder) => (\n                <TableRow hover key={recorder.id}>\n                  <TableCell align=\"center\">{recorder.date}</TableCell>\n                  <TableCell align=\"center\">\n                    {recorder.recorder1Name}\n                    <Box>\n                      {recorder.recorder1File ? (\n                        <Button\n                          color=\"primary\"\n                          size=\"small\"\n                          href={recorder.recorder1FileUrl}\n                        >\n                          下载\n                        </Button>\n                      ) : (\n                        \"暂未上传\"\n                      )}\n                    </Box>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {recorder.recorder2Name}\n                    <Box>\n                      {recorder.recorder2File ? (\n                        <Button\n                          color=\"primary\"\n                          size=\"small\"\n                          href={recorder.recorder2FileUrl}\n                        >\n                          {\" \"}\n                          下载\n                        </Button>\n                      ) : (\n                        \"暂未上传\"\n                      )}\n                    </Box>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {recorder.summarizerName}\n                    <Box>\n                      {recorder.summarizerFile ? (\n                        <Button\n                          color=\"primary\"\n                          size=\"small\"\n                          href={recorder.summarizerFileUrl}\n                        >\n                          {\" \"}\n                          下载\n                        </Button>\n                      ) : (\n                        \"暂未上传\"\n                      )}\n                    </Box>\n                  </TableCell>\n                  {hasPermission && (\n                    <TableCell align=\"center\">\n                      <Button\n                        color=\"primary\"\n                        size=\"small\"\n                        variant=\"text\"\n                        onClick={(e) => handleDeleteRecorder(recorder.id, e)}\n                      >\n                        删除\n                      </Button>\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n        {pageNo > 1 && (\n          <Pagination\n            className={classes.Pagination}\n            count={pageNo}\n            color=\"primary\"\n            onChange={(e, i) => setPage(i)}\n          />\n        )}\n        {loading && <Loading />}\n        {!loading && recorders?.length === 0 && (\n          <NoData msg=\"暂未添加辅读安排\" />\n        )}\n        {/* </PerfectScrollbar> */}\n      </Card>\n      <RecorderManageForm\n        users={users}\n        open={open}\n        onClose={handleClose}\n      ></RecorderManageForm>\n    </div>\n  );\n};\n\nexport default RecorderManage;\n","/Users/yechengjun/qiyu/my-react/src/views/seminar/AddLinkForm.js",[],"/Users/yechengjun/qiyu/my-react/src/components/NewArticleForm.js",["379","380"],"import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport cookie from \"react-cookies\";\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  Dialog,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { ADD_ARTICLE_URL } from \"src/settings\";\nimport { postFetch } from \"src/base\";\n\nexport default function NewArticleForm(props) {\n  const { onClose, open, classes } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <Formik\n        initialValues={{\n          title: \"\",\n          classID: null,\n          content: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n          title: Yup.string().max(255).required(),\n          classID: Yup.number().required(),\n        })}\n        onSubmit={(values) => {\n          postFetch({\n            url: ADD_ARTICLE_URL,\n            values,\n            successCallback: handleClose,\n          });\n          // var url = ADD_ARTICLE_URL;\n          // fetch(url, {\n          //   method: 'POST',\n          //   headers: new Headers({\n          //       'token': cookie.load(\"userInfo\").token,\n          //       'Content-Type': 'application/json;charset=utf-8'\n          // }),\n          // body: JSON.stringify(values)\n\n          // }).then(res => res.json())\n          // .catch(error => console.error('Error:', error))\n          // .then(response => console.log(response));\n          // handleClose();\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values,\n        }) => (\n          <form onSubmit={handleSubmit} className=\"dialogForm\">\n            <Box mb={1}>\n              <Typography color=\"textPrimary\" variant=\"h4\">\n                新建文章\n              </Typography>\n            </Box>\n            <TextField\n              error={Boolean(touched.name && errors.name)}\n              fullWidth\n              label=\"新建文章名称\"\n              margin=\"normal\"\n              name=\"title\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              variant=\"outlined\"\n            />\n            <TextField\n              select\n              fullWidth\n              label=\"所属类别\"\n              name=\"classID\"\n              margin=\"normal\"\n              onChange={handleChange}\n              variant=\"outlined\"\n              SelectProps={{\n                native: true,\n              }}\n            >\n              <option value={null}> 请选择</option>\n              {classes.map((option) => (\n                <option key={option.id} value={option.id}>\n                  {option.name}\n                </option>\n              ))}\n            </TextField>\n\n            <Box my={2}>\n              <Button\n                color=\"primary\"\n                // disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                提交\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n","/Users/yechengjun/qiyu/my-react/src/components/NewClassForm.js",[],"/Users/yechengjun/qiyu/my-react/src/components/CatalogCard.js",["381","382","383","384","385","386"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Button, Grid, Typography } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { DELETE_ARTICLE_URL, DELETE_CLASS_URL } from 'src/settings';\nimport { deleteFetch } from \"src/base\";\nimport corfirmModal from \"src/components/ConfirmModal\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    margin: 8\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: 600\n  }\n\n});\n\nexport default function CatalogCard(props) {\n  const classes = useStyles();\n  const { data = {}, refresh, userRoleId, authType } = props;\n  const { name, id, articles } = data;\n  const handleDeleteArticle = (id, name) => {\n    const cor = corfirmModal({\n      title: `确定要删除[${name}]吗？`,\n      handleCorfirm: () => {\n        cor.close();\n        deleteFetch({\n          url: `${DELETE_ARTICLE_URL}?id=${id}`,\n          values: { id },\n          successCallback: refresh,\n        });\n      },\n    });\n  }\n  const handleDeleteClass = (id, name) => {\n    const cor = corfirmModal({\n      title: `确定要删除[${name}]吗？`,\n      handleCorfirm: () => {\n        cor.close();\n        deleteFetch({\n          url: `${DELETE_CLASS_URL}?id=${id}`,\n          values: { id },\n          successCallback: refresh,\n        });\n      },\n    });\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item md={11}>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              {name}\n            </Typography>\n          </Grid>\n          {(userRoleId == 10 || userRoleId == authType) && (\n            <Grid item md={1}>\n              <Button onClick={(e) => handleDeleteClass(id, name)}>\n                删除类{\" \"}\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n\n        {articles?.map((item) => (\n          <Grid container spacing={1} key={item.id}>\n            <Grid item md={10}>\n              <RouterLink to={\"/app/article/\" + item.id}>\n                <Typography component=\"h2\">{item.title}</Typography>\n              </RouterLink>\n            </Grid>\n            {(userRoleId == 10 || userRoleId == authType) && (\n              <Grid item md={1}>\n                <Button\n                  component={RouterLink}\n                  to={\"/app/articleEdit/\" + item.id}\n                >\n                  编辑{\" \"}\n                </Button>\n              </Grid>\n            )}\n            {(userRoleId == 10 || userRoleId == authType) && (\n              <Grid item md={1}>\n                <Button\n                  onClick={(e) => handleDeleteArticle(item.id, item.title)}\n                >\n                  删除{\" \"}\n                </Button>\n              </Grid>\n            )}\n          </Grid>\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n","/Users/yechengjun/qiyu/my-react/src/layouts/DashoardLayout/NavBar/index.js",[],"/Users/yechengjun/qiyu/my-react/src/views/recorder/UpLoadForm.js",["387","388"],"import React,{useState} from 'react';\nimport cookie from 'react-cookies'\nimport {\n  Button,\n  makeStyles,\n  Input,\n  Typography,\n} from '@material-ui/core';\nimport { formDataFetch } from \"src/base\";\nimport alertBox from \"src/components/AlertBox\";\nimport { UPLOAD_RECORDER_URL } from \"src/settings\";\n\nconst useStyles = makeStyles(() => ({\n    root:{\n      display:\"inline-flex\",\n      margin:\"5px\",\n      '& button':{\n      background: \"#2f3c88\",\n      color: \"white\",\n      fontWeight: 500,\n      marginLeft: \"5px\",\n      verticalAlign: \"bottom\"\n      }\n    },\n    label:{\n      lineHeight: \"2rem\",\n      marginRight: \"1rem\"\n    }\n  }));\n  export default function UploadForm(props){    \n    const { RecorderId, DocType, Date, refresh } = props;\n    const [file,setFile] = useState([]);\n    const [uploading, setUploading] = useState(false)\n    const classes = useStyles();\n    \n    const handleFiles=(e)=>{\n        console.log(e.target.files[0]);\n        setFile(e.target.files[0]);\n    }\n    const DocTypes=[\"一号辅读\", \"二号辅读\", \"会议总结\"]\n    const FileKeys = [\n      \"recorder1Content\",\n      \"recorder2Content\",\n      \"summarizerContent\",\n    ];\n\n    const handleSubmit = () => {\n      if (file == undefined || uploading) return;\n      setUploading(true);\n      formDataFetch({\n        url: UPLOAD_RECORDER_URL,\n        values: {\n          id: RecorderId,\n          [FileKeys[DocType]]: file,\n        },\n        successCallback: () => {\n          alertBox({ text: \"上传成功\", severity: \"success\" });\n          setUploading(false);\n          refresh();\n        },\n        errorCallback: () => setUploading(false),\n      });\n      // var formData = new FormData();\n      // formData.append(\"id\", RecorderId);\n      // formData.append(FileKeys[DocType], file);\n      // fetch(UPLOAD_RECORDER_URL, {\n      //   method: \"POST\",\n      //   body: formData,\n      // });\n      // fetch(UPLOAD_RECORDER_URL, {\n      //   method: \"POST\",\n      //   body: formData,\n      // })\n      // .then((res) => res.json())\n      // .catch((error) => console.error(\"Error:\", error))\n      // .then((response) => {\n      //   console.log(response);\n      // });\n    }\n   \n    return (\n      <div>\n        <form className={classes.root}>\n          <Typography className={classes.label}>\n            请提交 {Date} 日的{DocTypes[DocType]}文件\n          </Typography>\n          <Input\n            id=\"file\"\n            type=\"file\"\n            accept=\".doc,.docx,.pdf,.xml\"\n            required\n            onChange={(e) => handleFiles(e)}\n          ></Input>\n          <Button variant=\"outlined\" size=\"small\" onClick={handleSubmit}>\n            {\" \"}\n            {uploading ? \"上传中···\" : \"上传文件\"}\n          </Button>\n        </form>\n      </div>\n    );\n}\n","/Users/yechengjun/qiyu/my-react/src/views/recorder/RecorderManageForm.js",[],"/Users/yechengjun/qiyu/my-react/src/layouts/DashoardLayout/NavBar/NavItem.js",[],"/Users/yechengjun/qiyu/my-react/src/views/seminar/SeminarManageForm.js",["389"],"import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  Dialog,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { postFetch } from \"src/base\";\nimport { ADD_SEMINAR_URL } from \"src/settings\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst SeminarManageForm = (props) => {\n  const { onClose, open, users } = props;\n\n  const classes = useStyles();\n  const handleClose = () => {\n    onClose();\n  };\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <Formik\n        initialValues={{\n          theme: \"\",\n          date: \"2021-01-24\",\n          speakerId: null,\n        }}\n        validationSchema={Yup.object().shape({\n          theme: Yup.string().required(),\n          date: Yup.string().required(),\n          speakerId: Yup.number().required(),\n        })}\n        onSubmit={(values) => {\n          postFetch({\n            url: ADD_SEMINAR_URL,\n            values,\n            successCallback: () => {\n              console.log(\"添加成功\");\n              handleClose();\n            },\n          });\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values,\n        }) => (\n          <form onSubmit={handleSubmit} className=\"dialogForm\">\n            <Box mb={1}>\n              <Typography color=\"textPrimary\" variant=\"h6\">\n                添加演讲安排\n              </Typography>\n            </Box>\n            <TextField\n              fullWidth\n              label=\"演讲主题\"\n              margin=\"normal\"\n              name=\"theme\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              variant=\"outlined\"\n            />\n            <TextField\n              select\n              fullWidth\n              label=\"主讲人\"\n              name=\"speakerId\"\n              margin=\"normal\"\n              onChange={handleChange}\n              variant=\"outlined\"\n              SelectProps={{\n                native: true,\n              }}\n            >\n              <option value={null}> 请选择</option>\n              {users.map((option) => (\n                <option key={option.id} value={option.id}>\n                  {option.name}\n                </option>\n              ))}\n            </TextField>\n            <TextField\n              label=\"时间\"\n              type=\"date\"\n              margin=\"normal\"\n              fullWidth\n              name=\"date\"\n              value={values.date}\n              onChange={handleChange}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <Box my={2}>\n              <Button\n                color=\"primary\"\n                // disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                提交\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n};\nexport default SeminarManageForm;\n","/Users/yechengjun/qiyu/my-react/src/service/userService.js",["390","391"],"import cookie from 'react-cookies'\n\n//设置cookie，第三个参数的意思是所有页面都能用这个cookie\n\n// 加载名为cookieName的cookie信息\n// cookie.load(cookieName)\n// // 删除名为cookieName的cookie信息\n// cookie.remove(cookieName)\nimport { RoleName, GET_ALL_USER_URL, USER_INFO } from 'src/settings'\n// export const getAllUser = (setUsers) => {\n//   return fetch(GET_ALL_USER_URL, {\n//       method: 'GET', \n//     //   headers: new Headers({\n//     //       'token': cookie.load(\"userInfo\").token\n//     //   })\n//       });\n// }\n\nexport const getAllUser = async ({ page = 1, limit = 10 }) => {\n  try {\n    let response = await fetch(\n      `${GET_ALL_USER_URL}?limit=${limit}&offset=${(page - 1) * limit}`\n    );\n    return await response.json();\n  } catch (error) {\n    console.log(\"Request Failed\", error);\n  }\n};\n\nexport const getUserInfo = async () => {\n  try {\n    let response = await fetch(USER_INFO)\n    return await response.json()\n  } catch (error) {\n    console.log('Request Failed', error);\n  }\n}\n","/Users/yechengjun/qiyu/my-react/src/layouts/Context.js",[],"/Users/yechengjun/qiyu/my-react/src/base/index.js",[],"/Users/yechengjun/qiyu/my-react/src/views/updateUserInfo/UpdateUserInfoView.js",["392"],"/Users/yechengjun/qiyu/my-react/src/views/updateUserInfo/UpdateUserInfoForm.js",["393"],"/Users/yechengjun/qiyu/my-react/src/views/ResetPasswordView.js",[],"/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/essays/index.js",[],"/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/classes/index.js",[],"/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/classes/EssayClasses.js",[],"/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/essays/Essays.js",[],"/Users/yechengjun/qiyu/my-react/src/views/essayRecommendation/classes/NewClassForm.js",[],"/Users/yechengjun/qiyu/my-react/src/views/studyPlan/index.js",["394"],"import React, { useContext } from \"react\";\nimport { Container, makeStyles } from \"@material-ui/core\";\nimport { UserContext } from \"src/layouts/Context\";\nimport Page from \"src/components/Page\";\nimport StudyPlanManage from \"./StudyPlanManage\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: \"100%\",\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n  },\n}));\nconst StudyPlanView = () => {\n  const classes = useStyles();\n  const { userInfo } = useContext(UserContext);\n  const hasPermission = userInfo.roleId === 10 || userInfo.roleId === 50;\n\n  return (\n    <Page className={classes.root} title=\"培养计划\">\n      <Container maxWidth={false}>\n        <StudyPlanManage />\n      </Container>\n    </Page>\n  );\n};\n\nexport default StudyPlanView;\n","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/detail/index.js",["395"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"src/layouts/Context\";\nimport {\n  makeStyles,\n  Box,\n  Typography,\n  Button,\n  Card,\n  Divider,\n} from \"@material-ui/core\";\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\nimport {\n  MNG_GET_PLAN_DETAIL_URL,\n  MNG_DELETE_STAGE_URL,\n  U_GET_PLAN_DETAIL_URL,\n} from \"src/settings\";\nimport { deleteFetch } from \"src/base\";\nimport corfirmModal from \"src/components/ConfirmModal\";\nimport alertBox from \"src/components/AlertBox\";\nimport WorkTable from '../components/WorkTable'\nimport EditStage from '../components/EditStage'\nimport StageButton from \"../components/StageButton\";\n// import EssayClasses from \"./EssayClasses\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: \"100%\",\n    padding: theme.spacing(3),\n    \"& .MuiCard-root\": {\n      margin: theme.spacing(1),\n    },\n  },\n  header: {\n    backgroundColor: \"#fff\",\n    padding: theme.spacing(3),\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& h2\": {\n      flex: 1,\n    },\n  },\n  stages: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    \"& .MuiButton-root\": {\n      margin: theme.spacing(1),\n    },\n  },\n  endDate: {\n    padding: theme.spacing(2),\n    fontWeight: \"bold\",\n  },\n  return: {\n    marginLeft: theme.spacing(1),\n  },\n  empty: {\n    padding: theme.spacing(3),\n    textAlign: 'center'\n  },\n}));\nconst StudyPlanDetailView = () => {\n  const classes = useStyles();\n  const { id } = useParams();\n  const history = useHistory();\n  const [refresh, setRefresh] = useState(false)\n  const [plan, setPlan] = useState({})\n  const [currentKey, setCurrentKey] = useState(0)\n  const [open, setOpen] = useState(false);\n  const [stageDetail, setStageDetail] = useState({});\n  const { userInfo } = useContext(UserContext);\n  const hasPermission = userInfo.roleId === 10 || userInfo.roleId === 50;\n  useEffect(() => {\n    fetch(\n      `${hasPermission ? MNG_GET_PLAN_DETAIL_URL : U_GET_PLAN_DETAIL_URL}?${\n        hasPermission ? \"id\" : \"planId\"\n      }=${id}`,\n      {}\n    )\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => {\n        setPlan(response?.data || {});\n      });\n  }, [refresh]);\n  const currentStage = plan?.stages ? plan?.stages[currentKey] : [];\n  const  handleDelete = (stageId, name) => {\n    const cor = corfirmModal({\n      title: \"确定要删除改阶段吗？\",\n      handleCorfirm: () => {\n        cor.close();\n        deleteFetch({\n          url: `${MNG_DELETE_STAGE_URL}?id=${stageId}`,\n          successCallback: () => {\n            alertBox({ text: \"删除成功\", severity: \"success\" });\n            setRefresh(!refresh);\n          },\n        });\n      },\n    });\n  }\n  return (\n    <div className={classes.root}>\n      <Box className={classes.header}>\n        <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\n          {plan?.name || \"\"}\n        </Typography>\n        {hasPermission && (\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            variant=\"outlined\"\n            onClick={() => setOpen(true)}\n          >\n            添加阶段\n          </Button>\n        )}\n        <Button\n          className={classes.return}\n          size=\"small\"\n          variant=\"outlined\"\n          endIcon={<KeyboardReturnIcon />}\n          onClick={history.goBack}\n        >\n          返回\n        </Button>\n      </Box>\n      {plan?.stages?.length > 0 ? (\n        <>\n          <Box className={classes.stages}>\n            {plan?.stages?.map((stage, i) => (\n              <StageButton\n                text={`第${stage.term}学期 ~ 阶段${stage.index}`}\n                color={currentKey === i ? \"primary\" : \"default\"}\n                key={stage.id}\n                stage={stage}\n                handleClick={() => setCurrentKey(i)}\n                handleDelete={() => handleDelete(stage.id)}\n                handleEdit={() => {\n                  setStageDetail(stage);\n                  setOpen(true);\n                }}\n                hasPermission={hasPermission}\n              />\n            ))}\n          </Box>\n          <Divider />\n          <Typography\n            color=\"textPrimary\"\n            size=\"small\"\n            component=\"h2\"\n            className={classes.endDate}\n          >\n            {`截止日期：${currentStage?.endDate?.slice(0, 11) || \"--\"}`}\n          </Typography>\n          {(hasPermission || currentStage?.commonWorks?.length > 0) && (\n            <WorkTable\n              works={currentStage?.commonWorks}\n              workType={100}\n              planStageId={currentStage?.id}\n              refresh={() => setRefresh(!refresh)}\n              hasPermission={hasPermission}\n            />\n          )}\n          {(hasPermission || currentStage?.keshuoWorks?.length > 0) && (\n            <WorkTable\n              works={currentStage?.keshuoWorks}\n              workType={200}\n              planStageId={currentStage?.id}\n              refresh={() => setRefresh(!refresh)}\n              hasPermission={hasPermission}\n            />\n          )}\n          {(hasPermission || currentStage?.academicWorks?.length > 0) && (\n            <WorkTable\n              works={currentStage?.academicWorks}\n              workType={310}\n              planStageId={currentStage?.id}\n              refresh={() => setRefresh(!refresh)}\n              hasPermission={hasPermission}\n            />\n          )}\n          {(hasPermission || currentStage?.synthesizingWorks?.length > 0) && (\n            <WorkTable\n              works={currentStage?.synthesizingWorks}\n              workType={320}\n              planStageId={currentStage?.id}\n              refresh={() => setRefresh(!refresh)}\n              hasPermission={hasPermission}\n            />\n          )}\n          {(hasPermission || currentStage?.technologyWorks?.length > 0) && (\n            <WorkTable\n              works={currentStage?.technologyWorks}\n              workType={330}\n              planStageId={currentStage?.id}\n              refresh={() => setRefresh(!refresh)}\n              hasPermission={hasPermission}\n            />\n          )}\n        </>\n      ) : (\n        <Card className={classes.empty}>还未添加任何培养阶段</Card>\n      )}\n      <EditStage\n        open={open}\n        onClose={() => {\n          setOpen(false);\n          setStageDetail({});\n          setRefresh(!refresh);\n        }}\n        stageDetail={stageDetail}\n        planId={plan.id}\n      />\n    </div>\n  );\n};\n\nexport default StudyPlanDetailView;\n","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/edit/index.js",[],"/Users/yechengjun/qiyu/my-react/src/views/device/DeviceView.js",["396"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Page from \"src/components/Page\";\nimport { UserContext } from \"src/layouts/Context\";\nimport { U_GET_ALL_DEVICE_URL, MNG_GET_ALL_DEVICE_URL } from \"src/settings\";\nimport DeviceManagement from \"./DeviceManagement\";\nimport DeviceNormal from \"./DeviceNormal\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n}));\n\nconst DeviceView = () => {\n  const classes = useStyles();\n  const { userInfo } = useContext(UserContext);\n  const [devices, setDevices] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n\n  const getAllDevice = () => {\n    fetch(\n      `${\n        userInfo.roleId === 10 ? MNG_GET_ALL_DEVICE_URL : U_GET_ALL_DEVICE_URL\n      }?limit=1999`,\n      {}\n    )\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => {\n        setDevices(response?.data || []);\n      });\n  };\n  useEffect(getAllDevice, [refresh]);\n  const refreshDevice = () => setRefresh((prev) => !prev);\n\n  return (\n    <Page className={classes.root} title=\"设备管理\">\n      {userInfo.roleId === 10 ? (\n        <DeviceManagement devices={devices} refresh={refreshDevice} />\n      ) : (\n        <DeviceNormal devices={devices} refresh={refreshDevice} />\n      )}\n    </Page>\n  );\n};\n\nexport default DeviceView;\n","/Users/yechengjun/qiyu/my-react/src/views/device/DeviceManagement.js",[],"/Users/yechengjun/qiyu/my-react/src/views/device/components/DeviceTable.js",[],"/Users/yechengjun/qiyu/my-react/src/views/device/components/ApplyDeviceForm.js",[],"/Users/yechengjun/qiyu/my-react/src/views/device/DeviceNormal.js",[],"/Users/yechengjun/qiyu/my-react/src/views/device/components/EditDevice.js",[],"/Users/yechengjun/qiyu/my-react/src/views/device/components/DeviceApplyHistory.js",["397","398"],"import React, { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  IconButton,\n  Dialog,\n  Typography,\n  Slide,\n  makeStyles,\n  Table,\n  TableCell,\n  TableBody,\n  TableRow,\n  TableHead,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MNG_DEVICE_USAGE_URL, MNG_RETURN_DEVICE_URL } from \"src/settings\";\nimport { postFetch } from \"src/base\";\nimport alertBox from \"src/components/AlertBox\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DeviceApplyHistory(props) {\n  const { onClose, open, deviceDetail } = props;\n  const classes = useStyles();\n  const [histories, setHistories] = useState([]);\n  const [refresh, setRefresh] = useState(false)\n  useEffect(() => {\n    if (deviceDetail?.id) {\n      fetch(`${MNG_DEVICE_USAGE_URL}?deviceId=${deviceDetail?.id}`, {})\n        .then((res) => res.json())\n        .catch((error) => console.error(\"Error:\", error))\n        .then((response) => {\n          setHistories(response?.data || []);\n        });\n    }\n  }, [deviceDetail, refresh]);\n\n  const handleClose = () => {\n    onClose();\n  };\n  const returnDevice = (allocationId) => {\n    postFetch({\n      url: MNG_RETURN_DEVICE_URL,\n      values: {\n        allocationId,\n      },\n      successCallback: () => {\n        alertBox({ text: \"归还成功\", severity: \"success\" });\n        setRefresh(!refresh);\n      },\n    });\n  };\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            {`[${deviceDetail.name}] 借用记录`}\n          </Typography>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>借用人学号</TableCell>\n            <TableCell>借用人姓名</TableCell>\n            <TableCell>借出时间</TableCell>\n            <TableCell>借用数量</TableCell>\n            <TableCell>借用状态</TableCell>\n            <TableCell align=\"center\">操作</TableCell>\n          </TableRow>\n        </TableHead>\n        {/* type;设备类型 model;设备型号 name;设备名称 principal;负责人姓名\n          inventory;库存 inventoryUnit;库存单位 */}\n        <TableBody>\n          {histories?.map((history) => (\n            <TableRow hover key={history.id}>\n              <TableCell>{history.userStuId}</TableCell>\n              <TableCell>{history.userName}</TableCell>\n              <TableCell>{history.createTime}</TableCell>\n              <TableCell>{`${history.inventoryUsage}（${history.inventoryUnit}）`}</TableCell>\n              <TableCell color={history.status === 10 ? \"error\" : \"default\"}>\n                {history.status === 10 ? \"未归还\" : \"已归还\"}\n              </TableCell>\n              <TableCell align=\"center\">\n                {history.status === 10 && (\n                  <Button\n                    color={history.status === 10 ? \"primary\" : \"default\"}\n                    size=\"small\"\n                    variant=\"text\"\n                    onClick={() => {\n                      if (history.status === 10) returnDevice(history.id);\n                    }}\n                  >\n                    设为已还\n                  </Button>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Dialog>\n  );\n}\n","/Users/yechengjun/qiyu/my-react/src/views/device/components/HistoryTable.js",[],"/Users/yechengjun/qiyu/my-react/src/views/studyPlan/StudyPlanManage.js",["399"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Typography,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  makeStyles,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Loading from \"src/components/Loading\";\nimport NoData from \"src/components/NoData\";\nimport { UserContext } from \"src/layouts/Context\";\nimport {\n  MNG_GET_ALL_PLAN_URL,\n  MNG_DELETE_PLAN_URL,\n  U_GET_ALL_PLAN_URL,\n} from \"src/settings\";\nimport { deleteFetch } from \"src/base\";\nimport corfirmModal from \"src/components/ConfirmModal\";\nimport EditStudyPlan from \"./components/EditStudyPlan\";\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actions: {\n    justifyContent: \"flex-end\",\n  },\n  td: {\n    maxWidth: \"200px\",\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"16px\",\n    \"& p\": {\n      lineHeight: 2,\n    },\n  },\n  Pagination: {\n    padding: theme.spacing(2),\n    \"& .MuiPagination-ul\": {\n      justifyContent: \"center\",\n    },\n  },\n}));\n\nconst StudyPlanManage = () => {\n  const classes = useStyles();\n  const [refresh, setRefresh] = useState(false);\n  const [plans, setPlans] = useState([]);\n  const [planDetail, setPlanDetail] = useState({});\n  const [open, setOpen] = useState(false);\n  const { userInfo } = useContext(UserContext);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [pageNo, setPageNo] = useState(0);\n  const hasPermission = userInfo.roleId === 10 || userInfo.roleId === 50;\n  const getPlans = () => {\n    fetch(\n      `${\n        hasPermission ? MNG_GET_ALL_PLAN_URL : U_GET_ALL_PLAN_URL\n      }?limit=10&offset=${(page - 1) * 10}`,\n      {}\n    )\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => {\n        setPlans(response?.data || []);\n        setPageNo(Math.ceil(response?.paging?.total / 10) || 0);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setPlanDetail({});\n    setRefresh((prev) => !prev);\n  };\n\n  const handlePlan = (id, name) => {\n    const cor = corfirmModal({\n      title: `确定要删除[${name}]吗？`,\n      handleCorfirm: () => {\n        cor.close();\n        deleteFetch({\n          url: `${MNG_DELETE_PLAN_URL}?id=${id}`,\n          values: { id },\n          successCallback: () => {\n            setRefresh((prev) => !prev);\n          },\n        });\n      },\n    });\n  };\n  useEffect(getPlans, [refresh, page]);\n  return (\n    <div>\n      <Card className={classes.root}>\n        <Box className={classes.header}>\n          <Typography color=\"textPrimary\" size=\"small\">\n            培养计划\n          </Typography>\n          {hasPermission && (\n            <Button\n              color=\"primary\"\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={handleOpen}\n            >\n              添加培养计划\n            </Button>\n          )}\n        </Box>\n        <Divider />\n        <Box minWidth={800}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>编号</TableCell>\n                <TableCell>名称</TableCell>\n                <TableCell>入学年份</TableCell>\n                <TableCell align=\"center\">操作</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {plans.map((plan) => (\n                <TableRow hover key={plan.id}>\n                  <TableCell>{hasPermission ? plan.id : plan.planId}</TableCell>\n                  <TableCell>{plan.name}</TableCell>\n                  <TableCell>{plan.enrollYear}</TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      color=\"primary\"\n                      size=\"small\"\n                      variant=\"text\"\n                      href={`/app/studyPlan/detail/${\n                        hasPermission ? plan.id : plan.planId\n                      }`}\n                    >\n                      查看详情\n                    </Button>\n                    {hasPermission && (\n                      <>\n                        <Button\n                          color=\"primary\"\n                          size=\"small\"\n                          variant=\"text\"\n                          onClick={(e) => {\n                            setPlanDetail(plan);\n                            handleOpen();\n                          }}\n                        >\n                          编辑\n                        </Button>\n                        <Button\n                          color=\"primary\"\n                          size=\"small\"\n                          variant=\"text\"\n                          href={`/app/studyPlan/planAllocation/${plan.id}`}\n                        >\n                          任务分配\n                        </Button>\n                        <Button\n                          color=\"primary\"\n                          size=\"small\"\n                          variant=\"text\"\n                          onClick={(e) => handlePlan(plan.id, plan.name)}\n                        >\n                          删除\n                        </Button>\n                      </>\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n        {pageNo > 0 && (\n          <Pagination\n            className={classes.Pagination}\n            count={pageNo}\n            color=\"primary\"\n            onChange={(e, i) => setPage(i)}\n          />\n        )}\n        {loading && <Loading />}\n        {!loading && plans?.length === 0 && <NoData msg=\"暂未添加培养计划\" />}\n      </Card>\n      <EditStudyPlan\n        open={open}\n        onClose={handleClose}\n        planDetail={planDetail}\n      />\n    </div>\n  );\n};\n\nexport default StudyPlanManage;\n","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/EditStudyPlan.js",["400","401"],"import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Box,\n  Button,\n  TextField,\n  Dialog,\n  makeStyles,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { MNG_ADD_PLAN_URL, MNG_UPDATE_PLAN_URL } from \"src/settings\";\nimport { postFetch } from \"src/base\";\nimport alertBox from \"src/components/AlertBox\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n}));\n\nexport default function EditStudyPlan(props) {\n  const { onClose, open, planDetail } = props;\n  const classes = useStyles();\n\n  const handleClose = () => {\n    onClose();\n  };\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle onClose={handleClose}>\n        {planDetail?.id ? \"编辑培养计划\" : \"新增培养计划\"}\n      </DialogTitle>\n      <Formik\n        initialValues={planDetail}\n        onSubmit={(values) => {\n          postFetch({\n            url: planDetail?.id > 0 ? MNG_UPDATE_PLAN_URL : MNG_ADD_PLAN_URL,\n            values,\n            successCallback: () => {\n              alertBox({ text: \"操作成功\", severity: \"success\" });\n              handleClose();\n            },\n          });\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values,\n        }) => (\n          <form onSubmit={handleSubmit} className=\"dialogForm\">\n            <TextField\n              label=\"名称\"\n              fullWidth\n              margin=\"normal\"\n              name=\"name\"\n              value={values.name}\n              variant=\"outlined\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n            />\n            <TextField\n              label=\"入学年份\"\n              margin=\"normal\"\n              fullWidth\n              name=\"enrollYear\"\n              value={values.enrollYear}\n              variant=\"outlined\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              disabled={planDetail?.id > 0}\n            />\n            {!planDetail?.id && (\n              <TextField\n                select\n                fullWidth\n                label=\"是否选择模板创建\"\n                name=\"templateId\"\n                margin=\"normal\"\n                onChange={handleChange}\n                variant=\"outlined\"\n                SelectProps={{\n                  native: true,\n                }}\n              >\n                <option value={0}>否</option>\n                <option value={1}>是</option>\n              </TextField>\n            )}\n\n            <Box my={2}>\n              <Button\n                color=\"primary\"\n                // disabled={isSubmitting}\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n                fullWidth\n              >\n                提交\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/WorkTable.js",[],"/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/EditWork.js",[],"/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/EditStage.js",[],"/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/StageButton.js",[],"/Users/yechengjun/qiyu/my-react/src/views/studyPlan/planAllocation/index.js",["402","403"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Card,\n  Typography,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  makeStyles,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Loading from \"src/components/Loading\";\nimport NoData from \"src/components/NoData\";\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\nimport { UserContext } from \"src/layouts/Context\";\nimport { postFetch } from \"src/base\";\nimport corfirmModal from \"src/components/ConfirmModal\";\nimport {\n  MNG_GET_ALLOCATION_URL,\n  MNG_DELETE_ALLOCATION,\n  MNG_GET_USER_LIST,\n  MNG_ASSGIN_STUDY,\n} from \"src/settings\";\nimport { deleteFetch } from \"src/base\";\nimport alertBox from \"src/components/AlertBox\";\nimport AssignUser from \"../components/AssignUser\";\nimport Process from \"../components/Process\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  actions: {\n    justifyContent: \"flex-end\",\n  },\n  td: {\n    maxWidth: \"200px\",\n  },\n  header: {\n    display: \"flex\",\n    padding: \"16px\",\n    \"& p\": {\n      lineHeight: 2,\n    },\n    \"& .MuiTypography-root\": {\n      flex: 1,\n    },\n  },\n  empty: {\n    padding: theme.spacing(6),\n    textAlign: \"center\",\n  },\n  return: {\n    marginLeft: theme.spacing(1),\n  },\n  Pagination: {\n    padding: theme.spacing(2),\n    \"& .MuiPagination-ul\": {\n      justifyContent: \"center\",\n    },\n  },\n}));\nconst STATUS_TYPE = {\n  0: {\n    text: \"未分配\",\n    color: \"#ff9d00\",\n  },\n  10: {\n    text: \"已分配\",\n    color: \"#263238\",\n  },\n  20: {\n    text: \"已过期\",\n    color: \"#ff0000\",\n  },\n};\n\nconst PlanAllocationView = () => {\n  const classes = useStyles();\n  const { planId } = useParams();\n  const history = useHistory();\n  const [refresh, setRefresh] = useState(false);\n  const [list, setList] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userId, setUserId] = useState();\n  const [open, setOpen] = useState(false);\n  const [openProcess, setOpenProcess] = useState(false);\n  const { userInfo } = useContext(UserContext);\n  const [page, setPage] = useState(1);\n  const [pageNo, setPageNo] = useState(0);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getUserList();\n  }, []);\n  const getUserList = () => {\n    fetch(`${MNG_GET_USER_LIST}?planId=${planId}`, {})\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => {\n        setUsers(response?.data || []);\n      });\n  }\n  const getList = () => {\n    fetch(\n      `${MNG_GET_ALLOCATION_URL}?id=${planId}&limit=10&offset=${\n        (page - 1) * 10\n      }`,\n      {}\n    )\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => {\n        setList(response?.data || []);\n        setPageNo(Math.ceil(response?.paging?.total / 10) || 0);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const handleOpen = () => {\n    if (users?.length > 0) {\n      setOpen(true);\n    } else {\n      alertBox({ text: '没有可分配的用户' })\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setRefresh((prev) => !prev);\n  };\n\n  const handleDelete = (id, name, userId) => {\n    const cor = corfirmModal({\n      title: `确定要将[${name}]移出该培养计划吗？`,\n      handleCorfirm: () => {\n        cor.close()\n        deleteFetch({\n          url: `${MNG_DELETE_ALLOCATION}?id=${id}&userId=${userId}`,\n          successCallback: () => {\n            setRefresh((prev) => !prev);\n            getUserList();\n          },\n        });\n      },\n    });\n  };\n  const assignStudy = (userIds) => {\n    postFetch({\n      url: MNG_ASSGIN_STUDY,\n      values: {\n        planId,\n        userIds,\n      },\n      successCallback: () => {\n        alertBox({ text: \"设置成功\", severity: \"success\" });\n        handleClose();\n      },\n    });\n  };\n  useEffect(getList, [refresh, page]);\n  const hasPermission = userInfo.roleId === 10 || userInfo.roleId === 50;\n  return (\n    <div className={classes.root}>\n      <Card>\n        <Box className={classes.header}>\n          <Typography color=\"textPrimary\" size=\"small\">\n            培养计划分配\n          </Typography>\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            variant=\"outlined\"\n            onClick={handleOpen}\n          >\n            分配学员\n          </Button>\n          <Button\n            className={classes.return}\n            size=\"small\"\n            variant=\"outlined\"\n            endIcon={<KeyboardReturnIcon />}\n            onClick={history.goBack}\n          >\n            返回\n          </Button>\n        </Box>\n        <Divider />\n        <Box minWidth={800}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>姓名</TableCell>\n                <TableCell>学号</TableCell>\n                <TableCell>状态</TableCell>\n                <TableCell align=\"center\">任务总数/已完成</TableCell>\n                <TableCell align=\"center\">延期未完成/已完成</TableCell>\n                <TableCell align=\"center\">超期未完成/已完成</TableCell>\n                {hasPermission && <TableCell align=\"center\">操作</TableCell>}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {list.map((plan) => (\n                <TableRow hover key={plan.id}>\n                  <TableCell>{plan.userName}</TableCell>\n                  <TableCell>{plan.userStuId}</TableCell>\n                  <TableCell>\n                    <span\n                      style={{ color: STATUS_TYPE[plan?.status || 0]?.color }}\n                    >\n                      {STATUS_TYPE[plan?.status || 0]?.text}\n                    </span>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {`${plan?.info.total || 0} / ${plan?.info.finished || 0}`}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {`${plan?.info.delayUnfinished || 0} / ${\n                      plan?.info.delayFinished || 0\n                    }`}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <span\n                      style={{\n                        color:\n                          plan?.info.overtimeUnfinished === 1\n                            ? \"#ff9d00\"\n                            : plan?.info.overtimeUnfinished > 1\n                            ? \"#ff0000\"\n                            : \"\",\n                      }}\n                    >\n                      {plan?.info.overtimeUnfinished || 0}\n                    </span>\n                    {` / ${plan?.info.overtimeFinished || 0}`}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {plan?.status !== 10 && (\n                      <Button\n                        color=\"primary\"\n                        size=\"small\"\n                        variant=\"text\"\n                        onClick={() => assignStudy([plan.userId])}\n                      >\n                        {plan?.status === 20 ? \"重新分配\" : \"分配任务\"}\n                      </Button>\n                    )}\n                    <Button\n                      color=\"primary\"\n                      size=\"small\"\n                      variant=\"text\"\n                      onClick={() => {\n                        setUserId(plan.userId);\n                        setOpenProcess(true);\n                      }}\n                    >\n                      完成进度\n                    </Button>\n                    <Button\n                      color=\"primary\"\n                      size=\"small\"\n                      variant=\"text\"\n                      onClick={(e) =>\n                        handleDelete(plan.id, plan.userName, plan.userId)\n                      }\n                    >\n                      删除\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n        {pageNo > 0 && (\n          <Pagination\n            className={classes.Pagination}\n            count={pageNo}\n            color=\"primary\"\n            onChange={(e, i) => setPage(i)}\n          />\n        )}\n\n        {loading && <Loading />}\n        {!loading && list?.length === 0 && <NoData msg=\"暂未分配学员\" />}\n      </Card>\n      {users?.length > 0 && (\n        <AssignUser\n          open={open}\n          onClose={handleClose}\n          users={users}\n          planId={planId}\n          assignStudy={assignStudy}\n        />\n      )}\n      {userId > 0 && (\n        <Process\n          open={openProcess}\n          onClose={() => setOpenProcess(false)}\n          planId={planId}\n          userId={userId}\n          refresh={() => setRefresh((prev) => !prev)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PlanAllocationView;\n","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/AssignUser.js",["404","405","406","407","408","409"],"import React, { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  IconButton,\n  Dialog,\n  Typography,\n  Slide,\n  makeStyles,\n  TextField,\n  ListItem,\n  List,\n  Container,\n  Button,\n} from \"@material-ui/core\";\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n    \"& .MuiButton-root\": {\n      color: \"#fff\",\n    },\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  box: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing(2),\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: \"150px\",\n  },\n  contaner: {\n    width: \"800px\",\n    margin: \"0 auto\",\n    \"& .MuiBox-root\": {\n      display: \"flex\",\n      alignItems: \"center\",\n      paddingLeft: \"16px\",\n      cursor: \"pointer\",\n    },\n  },\n  list: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& .MuiListItem-root\": {\n      width: \"150px\",\n      cursor: \"pointer\",\n    },\n  },\n}));\nconst types = [\n  {\n    value: 10,\n    label: \"学术型\",\n  },\n  {\n    value: 20,\n    label: \"结合型\",\n  },\n  {\n    value: 30,\n    label: \"技术型\",\n  },\n];\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DeviceApplyHistory(props) {\n  const { onClose, open, users, assignStudy } = props;\n  const classes = useStyles();\n  const [name, setName] = useState('')\n  const [keshuo, setKeshuo] = useState(2)\n  const [studyType, setStudyType] = useState(0)\n  const [userList, setUsersList] = useState(users)\n  const [userIds, setUserIds] = useState([]);\n\n  const handleClose = () => {\n    onClose();\n    setUserIds([]);\n  };\n  \n  useEffect(() => {\n    let list = [...users];\n    if (name !== '') {\n      list = list.filter((user) => user?.name?.includes(name));\n    }\n    if (parseInt(studyType) !== 0) {\n      list = list.filter((user) => user?.studyType === parseInt(studyType));\n    }\n    if (parseInt(keshuo) !== 2) {\n      list = list.filter((user) => user?.keshuo === parseInt(keshuo));\n    }\n    setUsersList(list)\n  }, [name, keshuo, studyType])\n  const handleCheckAll = () => {\n    if (userIds.length === 0 || userIds.length !== userList.length) {\n      setUserIds(userList.map((user) => user.id));\n    } else {\n      setUserIds([]);\n    }\n  }\n  const handleCheck = (id) => {\n    if (userIds.includes(id)) {\n      setUserIds((prev) => prev.filter((userId) => userId != id));\n    } else {\n      setUserIds(prev => [...prev, id])\n    }\n  }\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            任务分配\n          </Typography>\n          <Button size=\"small\" onClick={handleClose}>\n            取消\n          </Button>\n          <Button size=\"small\" onClick={() => assignStudy(userIds)}>\n            确认分配\n          </Button>\n          {/* <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton> */}\n        </Toolbar>\n      </AppBar>\n      <Box className={classes.box}>\n        <TextField\n          label=\"用户姓名\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          variant=\"outlined\"\n          className={classes.textField}\n        />\n        <TextField\n          select\n          label=\"就读类型\"\n          className={classes.textField}\n          onChange={(e) => setStudyType(e.target.value)}\n          variant=\"outlined\"\n          value={studyType}\n          SelectProps={{\n            native: true,\n          }}\n        >\n          <option value={0}>全部</option>\n          {types.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          select\n          label=\"是否科硕\"\n          className={classes.textField}\n          onChange={(e) => setKeshuo(e.target.value)}\n          variant=\"outlined\"\n          value={keshuo}\n          SelectProps={{\n            native: true,\n          }}\n        >\n          <option value={2}>全部</option>\n          <option value={0}>否</option>\n          <option value={1}>是</option>\n        </TextField>\n      </Box>\n      <Container className={classes.contaner}>\n        {userList.length > 0 && (\n          <Box onClick={handleCheckAll}>\n            {userIds.length === userList.length ? (\n              <CheckBoxIcon color=\"primary\" />\n            ) : (\n              <CheckBoxOutlineBlankIcon />\n            )}\n            全选\n          </Box>\n        )}\n        <List className={classes.list}>\n          {userList?.map((user) => (\n            <ListItem key={user.id} onClick={() => handleCheck(user.id)}>\n              {userIds.includes(user.id) ? (\n                <CheckBoxIcon color=\"primary\" />\n              ) : (\n                <CheckBoxOutlineBlankIcon />\n              )}\n              {user.name}\n            </ListItem>\n          ))}\n        </List>\n      </Container>\n    </Dialog>\n  );\n}\n","/Users/yechengjun/qiyu/my-react/src/views/studyPlan/components/Process.js",["410","411","412"],"import React, { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Button,\n  TextField,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Dialog,\n  Typography,\n  makeStyles,\n  DialogTitle,\n  Slide,\n  Container,\n  Card,\n  List,\n  ListItem,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MNG_EDIT_ALLOCATION, MNG_GET_ALLOCATION_INfO } from \"src/settings\";\nimport { postFetch } from \"src/base\";\nimport alertBox from 'src/components/AlertBox'\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n    // \"& .MuiButton-root\": {\n    //   color: \"#fff\",\n    // },\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  endDate: {\n    paddingTop: theme.spacing(3),\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    display: \"flex\",\n    \"& .MuiBotton-root\": {\n      marginLeft: theme.spacing(1),\n    },\n  },\n  stageContent: {\n    marginLeft: theme.spacing(3),\n    flex: 1,\n  },\n  listItem: {\n    display: 'flex',\n    '& .MuiTypography-root': {\n      flex: 1\n    }\n  },\n}));\nconst FINISH_TYPE = {\n  10: {\n    text: \"进行中\",\n    color: \"#263238\",\n  },\n  20: {\n    text: \"延期未完成\",\n    color: \"#ff9d00\",\n  },\n  30: {\n    text: \"超期未完成\",\n    color: \"#ff0000\",\n  },\n  40: {\n    text: \"已完成\",\n    color: \"#df5141\",\n  },\n  50: {\n    text: \"延期完成\",\n    color: \"#df5141\",\n  },\n  60: {\n    text: \"超期完成\",\n    color: \"#df5141\",\n  },\n};\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function Process(props) {\n  const { onClose, open, planId, userId } = props;\n  const [info, setInfo] = useState({});\n  const classes = useStyles();\n\n  const handleClose = () => {\n    onClose();\n  };\n  const getInfo = () => {\n    fetch(`${MNG_GET_ALLOCATION_INfO}?planId=${planId}&userId=${userId}`, {})\n      .then((res) => res.json())\n      .catch((error) => console.error(\"Error:\", error))\n      .then((response) => {\n        setInfo(response?.data || {});\n      });\n  }\n  useEffect(() => {\n    getInfo()\n  }, []);\n  const handleUpdate = (values) => {\n    postFetch({\n      url: MNG_EDIT_ALLOCATION,\n      values,\n      successCallback: () => {\n        alertBox({ text: \"变更成功\", severity: 'success' });\n        getInfo();\n      },\n    });\n  };\n  const WorkList = ({works}) => {\n    return (\n      <List>\n        {works?.map((work) => (\n          <WorkListItem work={work} key={work.id} />\n        ))}\n      </List>\n    );\n  };\n  const WorkListItem = ({work}) => {\n    const date =\n      work?.allocation?.planWorkExpectedEndDate?.length > 11\n        ? work?.allocation?.planWorkExpectedEndDate?.slice(0, 11)\n        : work?.allocation?.planWorkExpectedEndDate;\n    const [isSet, SetIsSet] = useState(false)\n    const [updateTime, setUpdateTime] = useState(date);\n    console.log(updateTime, work?.allocation?.planWorkExpectedEndDate);\n    return (\n      <ListItem className={classes.listItem}>\n        <Typography>\n          <span>{`${work.index}. ${work.name}`}</span>\n          <span\n            style={{\n              color: FINISH_TYPE[work?.allocation?.status || 10]?.color,\n            }}\n          >\n            {`（${FINISH_TYPE[work?.allocation?.status || 10]?.text}）`}\n          </span>\n        </Typography>\n\n        {isSet ? (\n          <>\n            <TextField\n              label=\"截止日期\"\n              type=\"date\"\n              margin=\"normal\"\n              disabled={!isSet}\n              name=\"date\"\n              value={updateTime}\n              onChange={(e) => setUpdateTime(e.target.value)}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <Button\n              color=\"primary\"\n              size=\"small\"\n              style={{ marginLeft: 20 }}\n              onClick={() => {\n                handleUpdate({\n                  id: work?.allocation?.id,\n                  delayDate: updateTime,\n                });\n                SetIsSet(false);\n              }}\n            >\n              保存\n            </Button>\n          </>\n        ) : (\n          <>\n            <div>{`结束日期：${updateTime}`}</div>\n            <Button\n              color=\"primary\"\n              size=\"small\"\n              style={{ marginLeft: 20 }}\n              onClick={() => SetIsSet(true)}\n            >\n              修改结束日期\n            </Button>\n          </>\n        )}\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"outlined\"\n          style={{ marginLeft: 20 }}\n          onClick={() =>\n            handleUpdate({\n              id: work?.allocation?.id,\n              finished: work?.allocation?.finished === 0 ? 1 : 0,\n            })\n          }\n        >\n          {work?.allocation?.finished === 0 ? \"设为已完成\" : \"设为未完成\"}\n        </Button>\n      </ListItem>\n    );\n  }\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n      className={classes.root}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h4\" className={classes.title}>\n            {`[${info?.name}] 任务进度`}\n          </Typography>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Container>\n        <Typography className={classes.endDate} veriant=\"h6\">\n          {`初始日期：${\n            info?.referenceDate?.length > 11\n              ? info?.referenceDate?.slice(0, 11)\n              : info?.referenceDate\n          }`}\n        </Typography>\n        <Box>\n          {info?.stages?.map((stage) => (\n            <Card key={stage.id} className={classes.card}>\n              <div>\n                <h4>\n                  {`第${stage.term}学期 ~ 第${stage.index}阶段`}\n                  <br />\n                  <span\n                    style={{ fontSize: 12 }}\n                  >{`结束日期：(${stage?.endDate?.slice(0, 11)})`}</span>\n                </h4>\n              </div>\n              <div className={classes.stageContent}>\n                {stage?.commonWorks?.length > 0 && (\n                  <Box>\n                    <Typography veriant=\"h6\">公共任务：</Typography>\n                    <WorkList works={stage?.commonWorks} />\n                  </Box>\n                )}\n                {stage?.keshuoWorks?.length > 0 && (\n                  <Box>\n                    <Typography veriant=\"h6\">科硕任务：</Typography>\n                    <WorkList works={stage?.keshuoWorks} />\n                  </Box>\n                )}\n                {stage?.academicWorks?.length > 0 && (\n                  <Box>\n                    <Typography veriant=\"h6\">学术型任务：</Typography>\n                    <WorkList works={stage?.academicWorks} />\n                  </Box>\n                )}\n                {stage?.synthesizingWorks?.length > 0 && (\n                  <Box>\n                    <Typography veriant=\"h6\">结合型任务：</Typography>\n                    <WorkList works={stage?.synthesizingWorks} />\n                  </Box>\n                )}\n                {stage?.technologyWorks?.length > 0 && (\n                  <Box>\n                    <Typography veriant=\"h6\">技术型任务：</Typography>\n                    <WorkList works={stage?.technologyWorks} />\n                  </Box>\n                )}\n              </div>\n            </Card>\n          ))}\n        </Box>\n      </Container>\n    </Dialog>\n  );\n}\n","/Users/yechengjun/qiyu/my-react/src/components/AlertBox/index.js",[],"/Users/yechengjun/qiyu/my-react/src/components/AlertBox/AlertBox.js",[],"/Users/yechengjun/qiyu/my-react/src/components/ConfirmModal/index.js",[],"/Users/yechengjun/qiyu/my-react/src/components/ConfirmModal/ConfirmModal.js",[],"/Users/yechengjun/qiyu/my-react/src/components/Loading/index.js",[],"/Users/yechengjun/qiyu/my-react/src/components/NoData/index.js",[],"/Users/yechengjun/qiyu/my-react/src/views/bulletin/BulletinManageView.js",[],"/Users/yechengjun/qiyu/my-react/src/views/bulletin/BulletinManage.js",[],"/Users/yechengjun/qiyu/my-react/src/views/bulletin/BulletinManageForm.js",[],{"ruleId":"413","replacedBy":"414"},{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","severity":1,"message":"418","line":1,"column":9,"nodeType":"419","messageId":"420","endLine":1,"endColumn":17},{"ruleId":"421","severity":1,"message":"422","line":12,"column":40,"nodeType":"423","messageId":"424","endLine":12,"endColumn":42},{"ruleId":"417","severity":1,"message":"425","line":11,"column":3,"nodeType":"419","messageId":"420","endLine":11,"endColumn":7},{"ruleId":"426","severity":1,"message":"427","line":174,"column":15,"nodeType":"428","messageId":"429","endLine":176,"endColumn":85},{"ruleId":"417","severity":1,"message":"430","line":1,"column":17,"nodeType":"419","messageId":"420","endLine":1,"endColumn":23},{"ruleId":"417","severity":1,"message":"431","line":5,"column":8,"nodeType":"419","messageId":"420","endLine":5,"endColumn":14},{"ruleId":"432","severity":1,"message":"433","line":33,"column":25,"nodeType":"434","endLine":33,"endColumn":27,"suggestions":"435"},{"ruleId":"436","severity":1,"message":"437","line":1,"column":1,"nodeType":"438","endLine":27,"endColumn":3},{"ruleId":"436","severity":1,"message":"439","line":1,"column":1,"nodeType":"438","endLine":35,"endColumn":3},{"ruleId":"417","severity":1,"message":"440","line":2,"column":8,"nodeType":"419","messageId":"420","endLine":2,"endColumn":14},{"ruleId":"417","severity":1,"message":"441","line":40,"column":7,"nodeType":"419","messageId":"420","endLine":40,"endColumn":14},{"ruleId":"421","severity":1,"message":"422","line":71,"column":19,"nodeType":"423","messageId":"424","endLine":71,"endColumn":21},{"ruleId":"417","severity":1,"message":"431","line":6,"column":8,"nodeType":"419","messageId":"420","endLine":6,"endColumn":14},{"ruleId":"421","severity":1,"message":"422","line":54,"column":25,"nodeType":"423","messageId":"424","endLine":54,"endColumn":27},{"ruleId":"421","severity":1,"message":"422","line":54,"column":50,"nodeType":"423","messageId":"424","endLine":54,"endColumn":52},{"ruleId":"417","severity":1,"message":"431","line":6,"column":8,"nodeType":"419","messageId":"420","endLine":6,"endColumn":14},{"ruleId":"421","severity":1,"message":"422","line":53,"column":25,"nodeType":"423","messageId":"424","endLine":53,"endColumn":27},{"ruleId":"421","severity":1,"message":"422","line":53,"column":50,"nodeType":"423","messageId":"424","endLine":53,"endColumn":52},{"ruleId":"417","severity":1,"message":"442","line":25,"column":8,"nodeType":"419","messageId":"420","endLine":25,"endColumn":17},{"ruleId":"432","severity":1,"message":"443","line":196,"column":29,"nodeType":"434","endLine":196,"endColumn":44,"suggestions":"444"},{"ruleId":"417","severity":1,"message":"431","line":4,"column":8,"nodeType":"419","messageId":"420","endLine":4,"endColumn":14},{"ruleId":"417","severity":1,"message":"445","line":11,"column":3,"nodeType":"419","messageId":"420","endLine":11,"endColumn":13},{"ruleId":"421","severity":1,"message":"422","line":64,"column":24,"nodeType":"423","messageId":"424","endLine":64,"endColumn":26},{"ruleId":"421","severity":1,"message":"422","line":64,"column":44,"nodeType":"423","messageId":"424","endLine":64,"endColumn":46},{"ruleId":"421","severity":1,"message":"422","line":80,"column":26,"nodeType":"423","messageId":"424","endLine":80,"endColumn":28},{"ruleId":"421","severity":1,"message":"422","line":80,"column":46,"nodeType":"423","messageId":"424","endLine":80,"endColumn":48},{"ruleId":"421","severity":1,"message":"422","line":90,"column":26,"nodeType":"423","messageId":"424","endLine":90,"endColumn":28},{"ruleId":"421","severity":1,"message":"422","line":90,"column":46,"nodeType":"423","messageId":"424","endLine":90,"endColumn":48},{"ruleId":"417","severity":1,"message":"431","line":2,"column":8,"nodeType":"419","messageId":"420","endLine":2,"endColumn":14},{"ruleId":"421","severity":1,"message":"422","line":48,"column":16,"nodeType":"423","messageId":"424","endLine":48,"endColumn":18},{"ruleId":"417","severity":1,"message":"446","line":20,"column":9,"nodeType":"419","messageId":"420","endLine":20,"endColumn":16},{"ruleId":"417","severity":1,"message":"431","line":1,"column":8,"nodeType":"419","messageId":"420","endLine":1,"endColumn":14},{"ruleId":"417","severity":1,"message":"447","line":9,"column":10,"nodeType":"419","messageId":"420","endLine":9,"endColumn":18},{"ruleId":"432","severity":1,"message":"448","line":47,"column":26,"nodeType":"434","endLine":47,"endColumn":28,"suggestions":"449"},{"ruleId":"417","severity":1,"message":"450","line":58,"column":5,"nodeType":"419","messageId":"420","endLine":58,"endColumn":17},{"ruleId":"417","severity":1,"message":"451","line":18,"column":9,"nodeType":"419","messageId":"420","endLine":18,"endColumn":22},{"ruleId":"432","severity":1,"message":"452","line":88,"column":6,"nodeType":"434","endLine":88,"endColumn":15,"suggestions":"453"},{"ruleId":"432","severity":1,"message":"454","line":34,"column":27,"nodeType":"434","endLine":34,"endColumn":36,"suggestions":"455"},{"ruleId":"417","severity":1,"message":"456","line":2,"column":10,"nodeType":"419","messageId":"420","endLine":2,"endColumn":16},{"ruleId":"417","severity":1,"message":"457","line":3,"column":13,"nodeType":"419","messageId":"420","endLine":3,"endColumn":16},{"ruleId":"432","severity":1,"message":"458","line":103,"column":23,"nodeType":"434","endLine":103,"endColumn":38,"suggestions":"459"},{"ruleId":"417","severity":1,"message":"457","line":3,"column":13,"nodeType":"419","messageId":"420","endLine":3,"endColumn":16},{"ruleId":"417","severity":1,"message":"446","line":23,"column":9,"nodeType":"419","messageId":"420","endLine":23,"endColumn":16},{"ruleId":"432","severity":1,"message":"460","line":98,"column":6,"nodeType":"434","endLine":98,"endColumn":8,"suggestions":"461"},{"ruleId":"432","severity":1,"message":"462","line":164,"column":22,"nodeType":"434","endLine":164,"endColumn":37,"suggestions":"463"},{"ruleId":"417","severity":1,"message":"456","line":2,"column":10,"nodeType":"419","messageId":"420","endLine":2,"endColumn":16},{"ruleId":"417","severity":1,"message":"457","line":3,"column":13,"nodeType":"419","messageId":"420","endLine":3,"endColumn":16},{"ruleId":"417","severity":1,"message":"464","line":8,"column":3,"nodeType":"419","messageId":"420","endLine":8,"endColumn":13},{"ruleId":"417","severity":1,"message":"465","line":21,"column":8,"nodeType":"419","messageId":"420","endLine":21,"endColumn":17},{"ruleId":"432","severity":1,"message":"466","line":108,"column":6,"nodeType":"434","endLine":108,"endColumn":31,"suggestions":"467"},{"ruleId":"421","severity":1,"message":"468","line":118,"column":59,"nodeType":"423","messageId":"424","endLine":118,"endColumn":61},{"ruleId":"417","severity":1,"message":"456","line":2,"column":10,"nodeType":"419","messageId":"420","endLine":2,"endColumn":16},{"ruleId":"417","severity":1,"message":"469","line":13,"column":3,"nodeType":"419","messageId":"420","endLine":13,"endColumn":14},{"ruleId":"432","severity":1,"message":"470","line":106,"column":6,"nodeType":"434","endLine":106,"endColumn":8,"suggestions":"471"},"no-native-reassign",["472"],"no-negated-in-lhs",["473"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'useRef' is defined but never used.","'cookie' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["474"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","'routes' is defined but never used.","'history' is assigned a value but never used.","'InputIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo.userId'. Either include it or remove the dependency array.",["475"],"'makeStyles' is defined but never used.","'classes' is assigned a value but never used.","'RoleName' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'userInfo.roleId'. Either include them or remove the dependency array.",["476"],"'isSubmitting' is assigned a value but never used.","'hasPermission' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'hasPermission' and 'id'. Either include them or remove the dependency array.",["477"],"React Hook useEffect has a missing dependency: 'userInfo.roleId'. Either include it or remove the dependency array.",["478"],"'Formik' is defined but never used.","'Yup' is defined but never used.","React Hook useEffect has a missing dependency: 'hasPermission'. Either include it or remove the dependency array.",["479"],"React Hook useEffect has a missing dependency: 'getUserList'. Either include it or remove the dependency array.",["480"],"React Hook useEffect has a missing dependency: 'planId'. Either include it or remove the dependency array.",["481"],"'IconButton' is defined but never used.","'CloseIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["482"],"Expected '!==' and instead saw '!='.","'DialogTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'getInfo'. Either include it or remove the dependency array.",["483"],"no-global-assign","no-unsafe-negation",{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},"Update the dependencies array to be: [id]",{"range":"504","text":"505"},"Update the dependencies array to be: [refresh, page, userInfo.userId]",{"range":"506","text":"507"},"Update the dependencies array to be: [id, userInfo.roleId]",{"range":"508","text":"509"},"Update the dependencies array to be: [hasPermission, id, refresh]",{"range":"510","text":"511"},"Update the dependencies array to be: [refresh, userInfo.roleId]",{"range":"512","text":"513"},"Update the dependencies array to be: [refresh, page, hasPermission]",{"range":"514","text":"515"},"Update the dependencies array to be: [getUserList]",{"range":"516","text":"517"},"Update the dependencies array to be: [refresh, page, planId]",{"range":"518","text":"519"},"Update the dependencies array to be: [name, keshuo, studyType, users]",{"range":"520","text":"521"},"Update the dependencies array to be: [getInfo]",{"range":"522","text":"523"},[1058,1060],"[id]",[5736,5751],"[refresh, page, userInfo.userId]",[1257,1259],"[id, userInfo.roleId]",[2410,2419],"[hasPermission, id, refresh]",[1057,1066],"[refresh, userInfo.roleId]",[2589,2604],"[refresh, page, hasPermission]",[2332,2334],"[getUserList]",[3951,3966],"[refresh, page, planId]",[2333,2358],"[name, keshuo, studyType, users]",[2128,2130],"[getInfo]"]